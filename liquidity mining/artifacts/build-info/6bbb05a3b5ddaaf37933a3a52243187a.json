{
	"id": "6bbb05a3b5ddaaf37933a3a52243187a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20StakingPool.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.6.0;\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @title LP质押合约\r\n */\r\ncontract LPTokenWrapper {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    /// @notice GoCash LP Token合约地址\r\n    IERC20 public lpt;\r\n\r\n    /// @dev 质押总量\r\n    uint256 private _totalSupply;\r\n    /// @dev 余额映射\r\n    mapping(address => uint256) private _balances;\r\n\r\n    /**\r\n     * @dev 返回总量\r\n     * @return 总量\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev 返回账户余额\r\n     * @param account 账户地址\r\n     * @return 余额\r\n     */\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev 把shushi抵押到Boardroom\r\n     * @param amount 质押数量\r\n     */\r\n    function stake(uint256 amount) public virtual {\r\n        // 总量增加\r\n        _totalSupply = _totalSupply.add(amount);\r\n        // 余额映射增加\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        // 将LPToken发送到当前合约\r\n        lpt.safeTransferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev 赎回LPToken\r\n     * @param amount 赎回数量\r\n     */\r\n    function withdraw(uint256 amount) public virtual {\r\n        // 用户的总质押数量\r\n        uint256 directorShare = _balances[msg.sender];\r\n        // 确认总质押数量大于取款数额\r\n        require(directorShare >= amount, 'withdraw request greater than staked amount');\r\n        // 总量减少\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        // 余额减少\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        // 将LPToken发送给用户\r\n        lpt.safeTransfer(msg.sender, amount);\r\n    }\r\n}\r\n\r\n\r\n\r\n     \r\n\r\n\r\n////import '@openzeppelin/contracts/access/Ownable.sol';\r\n\r\nabstract contract IRewardDistributionRecipient is Ownable {\r\n    address public rewardDistribution;\r\n\r\n    function notifyRewardAmount(uint256 reward) external virtual;\r\n\r\n    modifier onlyRewardDistribution() {\r\n        require(\r\n            _msgSender() == rewardDistribution,\r\n            'Caller is not reward distribution'\r\n        );\r\n        _;\r\n    }\r\n\r\n    function setRewardDistribution(address _rewardDistribution)\r\n        external\r\n        virtual\r\n        onlyOwner\r\n    {\r\n        rewardDistribution = _rewardDistribution;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n////// SPDX-License-Identifier-FLATTEN-SUPPRESS-WARNING: MIT\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2020-07-17\r\n */\r\n\r\n/*\r\n   ____            __   __        __   _\r\n  / __/__ __ ___  / /_ / /  ___  / /_ (_)__ __\r\n _\\ \\ / // // _ \\/ __// _ \\/ -_)/ __// / \\ \\ /\r\n/___/ \\_, //_//_/\\__//_//_/\\__/ \\__//_/ /_\\_\\\r\n     /___/\r\n* Synthetix: BASISCASHRewards.sol\r\n*\r\n* Docs: https://docs.synthetix.io/\r\n*\r\n*\r\n* MIT License\r\n* ===========\r\n*\r\n* Copyright (c) 2020 Synthetix\r\n*\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy\r\n* of this software and associated documentation files (the \"Software\"), to deal\r\n* in the Software without restriction, including without limitation the rights\r\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the Software is\r\n* furnished to do so, subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in all\r\n* copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n*/\r\n\r\n// File: @openzeppelin/contracts/math/Math.sol\r\n\r\n////import '@openzeppelin/contracts/math/Math.sol';\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n////import '@openzeppelin/contracts/math/SafeMath.sol';\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n////import '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\n// File: @openzeppelin/contracts/utils/Address.sol\r\n\r\n////import '@openzeppelin/contracts/utils/Address.sol';\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\r\n\r\n////import '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\r\n\r\n// File: contracts/IRewardDistributionRecipient.sol\r\n\r\n////import '../interfaces/IRewardDistributionRecipient.sol';\r\n\r\n////import '../token/LPTokenWrapper.sol';\r\n\r\n/**\r\n * @title LP Token矿池合约\r\n * @notice 周期180天\r\n */\r\ncontract LPTokenPool is LPTokenWrapper, IRewardDistributionRecipient {\r\n    IERC20 public token;\r\n    /// @notice 时间周期 = 180天\r\n    uint256 public DURATION = 180 days;\r\n    /// @notice 开始时间\r\n    uint256 public starttime; // starttime TBD\r\n    /// @notice 结束时间\r\n    uint256 public periodFinish = 0;\r\n    /// @notice 每秒奖励数量\r\n    uint256 public rewardRate = 0;\r\n    /// @notice 最后更新时间\r\n    uint256 public lastUpdateTime;\r\n    /// @notice 储存奖励数量\r\n    uint256 public rewardPerTokenStored;\r\n    /// @notice 每个质押Token支付用户的奖励\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    /// @notice 用户未发放的奖励数量\r\n    mapping(address => uint256) public rewards;\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    /**\r\n     * @dev 构造函数\r\n     * @param token_ token地址\r\n     * @param lptoken_ LPtoken地址\r\n     * @param starttime_ 开始时间\r\n     */\r\n    constructor(address token_, address lptoken_, uint256 starttime_) public {\r\n        token = IERC20(token_);\r\n        lpt = IERC20(lptoken_);\r\n        starttime = starttime_;\r\n    }\r\n\r\n    /**\r\n     * @dev 检查开始时间\r\n     */\r\n    modifier checkStart() {\r\n        require(block.timestamp >= starttime, 'LPTokenSharePool: not start');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev 更新奖励\r\n     * @param account 用户地址\r\n     */\r\n    modifier updateReward(address account) {\r\n        // 已奖励数量 = 每个质押Token的奖励\r\n        rewardPerTokenStored = rewardPerToken();\r\n        // 最后更新时间 = min(当前时间,最后时间)\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        // 如果用户地址!=0地址\r\n        if (account != address(0)) {\r\n            // 用户未发放的奖励数量 = 赚取用户奖励\r\n            rewards[account] = earned(account);\r\n            // 每个质押Token支付用户的奖励 = 已奖励数量\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev 返回奖励的最后期限\r\n     * @return 最后期限\r\n     * @notice 如果没有到达结束时间,返回当前时间\r\n     */\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        // 最小值(当前时间,结束时间)\r\n        return Math.min(block.timestamp, periodFinish);\r\n    }\r\n\r\n    /**\r\n     * @dev 每个质押Token的奖励\r\n     * @return 奖励数量\r\n     */\r\n    function rewardPerToken() public view returns (uint256) {\r\n        // 返回0\r\n        if (totalSupply() == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        // 已奖励数量 + (min(当前时间,最后时间) - 最后更新时间) * 每秒奖励 * 1e18 / 质押总量\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable()\r\n                    .sub(lastUpdateTime)\r\n                    .mul(rewardRate)\r\n                    .mul(1e18)\r\n                    .div(totalSupply())\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev 用户已奖励的数量\r\n     * @param account 用户地址\r\n     */\r\n    function earned(address account) public view returns (uint256) {\r\n        // 用户的质押数量 * (每个质押Token的奖励 - 每个质押Token支付用户的奖励) / 1e18 + 用户未发放的奖励数量\r\n        return\r\n            balanceOf(account)\r\n                .mul(rewardPerToken().sub(userRewardPerTokenPaid[account]))\r\n                .div(1e18)\r\n                .add(rewards[account]);\r\n    }\r\n\r\n    /**\r\n     * @dev 质押指定数量的token\r\n     * @param amount 质押数量\r\n     */\r\n    // stake visibility is public as overriding LPTokenWrapper's stake() function\r\n    function stake(\r\n        uint256 amount\r\n    ) public override updateReward(msg.sender) checkStart {\r\n        // 确认数量>0\r\n        require(amount > 0, 'HUSDGOCLPTokenSharePool: Cannot stake 0');\r\n        // 上级质押\r\n        super.stake(amount);\r\n        // 触发质押事件\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev 提款指定数额的质押token\r\n     * @param amount 质押数量\r\n     */\r\n    function withdraw(\r\n        uint256 amount\r\n    ) public override updateReward(msg.sender) checkStart {\r\n        // 确认数量>0\r\n        require(amount > 0, 'HUSDGOCLPTokenSharePool: Cannot withdraw 0');\r\n        // 上级提款\r\n        super.withdraw(amount);\r\n        // 触发提款事件\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev 退出\r\n     */\r\n    function exit() external {\r\n        // 提走用户质押的全部数量\r\n        withdraw(balanceOf(msg.sender));\r\n        // 获取奖励\r\n        getReward();\r\n    }\r\n\r\n    /**\r\n     * @dev 获取奖励\r\n     */\r\n    function getReward() public updateReward(msg.sender) checkStart {\r\n        // 奖励数量 = 用户已奖励的数量\r\n        uint256 reward = earned(msg.sender);\r\n        // 如果奖励数量>0\r\n        if (reward > 0) {\r\n            // 用户未发放的奖励数量 = 0\r\n            rewards[msg.sender] = 0;\r\n            // 发送奖励\r\n            token.safeTransfer(msg.sender, reward);\r\n            // 触发支付奖励事件\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev 通知奖励数量\r\n     * @param reward 奖励数量\r\n     */\r\n    function notifyRewardAmount(\r\n        uint256 reward\r\n    ) external override onlyRewardDistribution updateReward(address(0)) {\r\n        // 如果当前时间>开始时间\r\n        if (block.timestamp > starttime) {\r\n            // 如果当前时间 >= 结束时间\r\n            if (block.timestamp >= periodFinish) {\r\n                // 每秒奖励 = 奖励数量 / 180天\r\n                rewardRate = reward.div(DURATION);\r\n            } else {\r\n                // 剩余时间 = 结束时间 - 当前时间\r\n                uint256 remaining = periodFinish.sub(block.timestamp);\r\n                // 剩余奖励数量 = 剩余时间 * 每秒奖励 (第一次执行为0)\r\n                uint256 leftover = remaining.mul(rewardRate);\r\n                // 每秒奖励 = (奖励数量 + 剩余奖励数量) / 180天\r\n                rewardRate = reward.add(leftover).div(DURATION);\r\n            }\r\n            //最后更新时间 = 当前时间\r\n            lastUpdateTime = block.timestamp;\r\n            // 结束时间 = 当前时间 + 180天\r\n            periodFinish = block.timestamp.add(DURATION);\r\n            // 触发奖励增加事件\r\n            emit RewardAdded(reward);\r\n        } else {\r\n            // 每秒奖励 = 奖励数量 / 180天\r\n            rewardRate = reward.div(DURATION);\r\n            // 最后更新时间 = 开始时间\r\n            lastUpdateTime = starttime;\r\n            // 结束时间 = 开始时间 + 180天\r\n            periodFinish = starttime.add(DURATION);\r\n            // 触发奖励增加事件\r\n            emit RewardAdded(reward);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20StakingPool.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":8115:14002  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":8115:14002  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b87a415339301594d3afee16f66e5ed8d79690765c2e5dde4b4dc9fca34cce9c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b87a415339301594d3afee16f66e5ed8d79690765c2e5dde4b4dc9fca34cce9c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH27 0x415339301594D3AFEE16F66E5ED8D79690765C2E5DDE4B4DC9FCA3 0x4C 0xCE SWAP13 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8115:5887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b87a415339301594d3afee16f66e5ed8d79690765c2e5dde4b4dc9fca34cce9c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH27 0x415339301594D3AFEE16F66E5ED8D79690765C2E5DDE4B4DC9FCA3 0x4C 0xCE SWAP13 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8115:5887:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8115,
									"end": 14002,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b87a415339301594d3afee16f66e5ed8d79690765c2e5dde4b4dc9fca34cce9c64736f6c634300060c0033",
									".code": [
										{
											"begin": 8115,
											"end": 14002,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 14002,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IRewardDistributionRecipient": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardDistribution",
									"type": "address"
								}
							],
							"name": "setRewardDistribution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardDistribution()": "101114cf",
							"setRewardDistribution(address)": "0d68b761",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardDistribution\",\"type\":\"address\"}],\"name\":\"setRewardDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"IRewardDistributionRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 556,
								"contract": "contracts/ERC20StakingPool.sol:IRewardDistributionRecipient",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 997,
								"contract": "contracts/ERC20StakingPool.sol:IRewardDistributionRecipient",
								"label": "rewardDistribution",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LPTokenPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lptoken_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "starttime_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardDistribution",
									"type": "address"
								}
							],
							"name": "setRewardDistribution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "starttime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "返回账户余额",
								"params": {
									"account": "账户地址"
								},
								"returns": {
									"_0": "余额"
								}
							},
							"constructor": {
								"details": "构造函数",
								"params": {
									"lptoken_": "LPtoken地址",
									"starttime_": "开始时间",
									"token_": "token地址"
								}
							},
							"earned(address)": {
								"details": "用户已奖励的数量",
								"params": {
									"account": "用户地址"
								}
							},
							"exit()": {
								"details": "退出"
							},
							"getReward()": {
								"details": "获取奖励"
							},
							"lastTimeRewardApplicable()": {
								"details": "返回奖励的最后期限",
								"returns": {
									"_0": "最后期限"
								}
							},
							"notifyRewardAmount(uint256)": {
								"details": "通知奖励数量",
								"params": {
									"reward": "奖励数量"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"rewardPerToken()": {
								"details": "每个质押Token的奖励",
								"returns": {
									"_0": "奖励数量"
								}
							},
							"stake(uint256)": {
								"details": "质押指定数量的token",
								"params": {
									"amount": "质押数量"
								}
							},
							"totalSupply()": {
								"details": "返回总量",
								"returns": {
									"_0": "总量"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256)": {
								"details": "提款指定数额的质押token",
								"params": {
									"amount": "质押数量"
								}
							}
						},
						"title": "LP Token矿池合约",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":24059:31230  contract LPTokenPool is LPTokenWrapper, IRewardDistributionRecipient {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20StakingPool.sol\":24226:24234  180 days */\n  0xed4e00\n    /* \"contracts/ERC20StakingPool.sol\":24200:24234  uint256 public DURATION = 180 days */\n  0x06\n  sstore\n    /* \"contracts/ERC20StakingPool.sol\":24379:24380  0 */\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":24349:24380  uint256 public periodFinish = 0 */\n  0x08\n  sstore\n    /* \"contracts/ERC20StakingPool.sol\":24451:24452  0 */\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":24423:24452  uint256 public rewardRate = 0 */\n  0x09\n  sstore\n    /* \"contracts/ERC20StakingPool.sol\":25203:25383  constructor(address token_, address lptoken_, uint256 starttime_) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x60\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":14683:14700  address msgSender */\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":14703:14715  _msgSender() */\n  tag_6\n    /* \"contracts/ERC20StakingPool.sol\":14703:14713  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/ERC20StakingPool.sol\":14703:14715  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/ERC20StakingPool.sol\":14683:14715  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":14735:14744  msgSender */\n  dup1\n    /* \"contracts/ERC20StakingPool.sol\":14726:14732  _owner */\n  0x03\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":14726:14744  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":14793:14802  msgSender */\n  dup1\n    /* \"contracts/ERC20StakingPool.sol\":14760:14803  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20StakingPool.sol\":14789:14790  0 */\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":14760:14803  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ERC20StakingPool.sol\":14648:14811  constructor () internal {\r... */\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":25302:25308  token_ */\n  dup3\n    /* \"contracts/ERC20StakingPool.sol\":25287:25292  token */\n  0x05\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":25287:25309  token = IERC20(token_) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":25333:25341  lptoken_ */\n  dup2\n    /* \"contracts/ERC20StakingPool.sol\":25320:25323  lpt */\n  0x00\n  dup1\n    /* \"contracts/ERC20StakingPool.sol\":25320:25342  lpt = IERC20(lptoken_) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":25365:25375  starttime_ */\n  dup1\n    /* \"contracts/ERC20StakingPool.sol\":25353:25362  starttime */\n  0x07\n    /* \"contracts/ERC20StakingPool.sol\":25353:25375  starttime = starttime_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":25203:25383  constructor(address token_, address lptoken_, uint256 starttime_) public {\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":24059:31230  contract LPTokenPool is LPTokenWrapper, IRewardDistributionRecipient {\r... */\n  jump(tag_9)\n    /* \"contracts/ERC20StakingPool.sol\":14037:14143  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_7:\n    /* \"contracts/ERC20StakingPool.sol\":14090:14105  address payable */\n  0x00\n    /* \"contracts/ERC20StakingPool.sol\":14125:14135  msg.sender */\n  caller\n    /* \"contracts/ERC20StakingPool.sol\":14118:14135  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/ERC20StakingPool.sol\":14037:14143  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/ERC20StakingPool.sol\":24059:31230  contract LPTokenPool is LPTokenWrapper, IRewardDistributionRecipient {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":24059:31230  contract LPTokenPool is LPTokenWrapper, IRewardDistributionRecipient {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80faa57d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xcd3daf9d\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe9fad8ee\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xcd3daf9d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xce5fc8d0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x80faa57d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da58897\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0d68b761\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x101114cf\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1be05289\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":27380:27791  function earned(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":24777:24819  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":21504:21682  function setRewardDistribution(address _rewardDistribution)\r... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":21203:21236  address public rewardDistribution */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":24200:24234  uint256 public DURATION = 180 days */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":28417:28764  function withdraw(\r... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":29626:31227  function notifyRewardAmount(\r... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":29030:29533  function getReward() public updateReward(msg.sender) checkStart {\r... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":15534:15682  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_13:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":24423:24452  uint256 public rewardRate = 0 */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":26444:26624  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_15:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":24665:24722  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":24271:24295  uint256 public starttime */\n    tag_17:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":14892:14971  function owner() public view returns (address) {\r... */\n    tag_18:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":27975:28310  function stake(\r... */\n    tag_19:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":24495:24524  uint256 public lastUpdateTime */\n    tag_20:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":26719:27280  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_21:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":19429:19446  IERC20 public lpt */\n    tag_22:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":24567:24602  uint256 public rewardPerTokenStored */\n    tag_23:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":28810:28978  function exit() external {\r... */\n    tag_24:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":24349:24380  uint256 public periodFinish = 0 */\n    tag_25:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":15837:16081  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_26:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":24135:24154  IERC20 public token */\n    tag_27:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":27380:27791  function earned(address account) public view returns (uint256) {\r... */\n    tag_34:\n        /* \"contracts/ERC20StakingPool.sol\":27434:27441  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":27620:27783  balanceOf(account)\r... */\n      tag_92\n        /* \"contracts/ERC20StakingPool.sol\":27766:27773  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":27766:27782  rewards[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":27774:27781  account */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":27766:27782  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":27620:27743  balanceOf(account)\r... */\n      tag_93\n        /* \"contracts/ERC20StakingPool.sol\":27738:27742  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ERC20StakingPool.sol\":27620:27715  balanceOf(account)\r... */\n      tag_94\n        /* \"contracts/ERC20StakingPool.sol\":27661:27714  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_95\n        /* \"contracts/ERC20StakingPool.sol\":27682:27704  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/ERC20StakingPool.sol\":27682:27713  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":27705:27712  account */\n      dup10\n        /* \"contracts/ERC20StakingPool.sol\":27682:27713  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":27661:27677  rewardPerToken() */\n      tag_96\n        /* \"contracts/ERC20StakingPool.sol\":27661:27675  rewardPerToken */\n      tag_77\n        /* \"contracts/ERC20StakingPool.sol\":27661:27677  rewardPerToken() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ERC20StakingPool.sol\":27661:27681  rewardPerToken().sub */\n      tag_97\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27661:27714  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC20StakingPool.sol\":27620:27638  balanceOf(account) */\n      tag_98\n        /* \"contracts/ERC20StakingPool.sol\":27630:27637  account */\n      dup9\n        /* \"contracts/ERC20StakingPool.sol\":27620:27629  balanceOf */\n      tag_57\n        /* \"contracts/ERC20StakingPool.sol\":27620:27638  balanceOf(account) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/ERC20StakingPool.sol\":27620:27660  balanceOf(account)\r... */\n      tag_99\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27620:27715  balanceOf(account)\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/ERC20StakingPool.sol\":27620:27737  balanceOf(account)\r... */\n      tag_100\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27620:27743  balanceOf(account)\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/ERC20StakingPool.sol\":27620:27765  balanceOf(account)\r... */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27620:27783  balanceOf(account)\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/ERC20StakingPool.sol\":27600:27783  return\r... */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":27380:27791  function earned(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24777:24819  mapping(address => uint256) public rewards */\n    tag_37:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":21504:21682  function setRewardDistribution(address _rewardDistribution)\r... */\n    tag_40:\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      tag_103\n        /* \"contracts/ERC20StakingPool.sol\":15114:15124  _msgSender */\n      tag_104\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15110  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":15096:15163  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/ERC20StakingPool.sol\":21655:21674  _rewardDistribution */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":21634:21652  rewardDistribution */\n      0x04\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":21634:21674  rewardDistribution = _rewardDistribution */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":21504:21682  function setRewardDistribution(address _rewardDistribution)\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":21203:21236  address public rewardDistribution */\n    tag_42:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n    tag_44:\n        /* \"contracts/ERC20StakingPool.sol\":19709:19716  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19736:19748  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":19729:19748  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24200:24234  uint256 public DURATION = 180 days */\n    tag_46:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":28417:28764  function withdraw(\r... */\n    tag_49:\n        /* \"contracts/ERC20StakingPool.sol\":28496:28506  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      tag_109\n        /* \"contracts/ERC20StakingPool.sol\":25780:25794  rewardPerToken */\n      tag_77\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ERC20StakingPool.sol\":25757:25777  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/ERC20StakingPool.sol\":25757:25796  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      tag_110\n        /* \"contracts/ERC20StakingPool.sol\":25888:25912  lastTimeRewardApplicable */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/ERC20StakingPool.sol\":25871:25885  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":25871:25914  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25988:25989  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":25969:25976  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n      tag_111\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      tag_112\n        /* \"contracts/ERC20StakingPool.sol\":26101:26108  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":26094:26100  earned */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC20StakingPool.sol\":26075:26082  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26083:26090  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26075:26109  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26231:26251  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":26197:26219  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26220:26227  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26197:26251  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n    tag_111:\n        /* \"contracts/ERC20StakingPool.sol\":25501:25510  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":25482:25497  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":25482:25510  block.timestamp >= starttime */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":25474:25542  require(block.timestamp >= starttime, 'LPTokenSharePool: not start') */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c50546f6b656e5368617265506f6f6c3a206e6f742073746172740000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/ERC20StakingPool.sol\":28574:28575  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":28565:28571  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":28565:28575  amount > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":28557:28622  require(amount > 0, 'HUSDGOCLPTokenSharePool: Cannot withdraw 0') */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e85ee5087a90428432078dbd8d4e57ecaadd93cfcfac4363407006c688ba18f8\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/ERC20StakingPool.sol\":28658:28680  super.withdraw(amount) */\n      tag_117\n        /* \"contracts/ERC20StakingPool.sol\":28673:28679  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":28658:28672  super.withdraw */\n      tag_118\n        /* \"contracts/ERC20StakingPool.sol\":28658:28680  super.withdraw(amount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/ERC20StakingPool.sol\":28737:28747  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":28727:28756  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/ERC20StakingPool.sol\":28749:28755  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":28727:28756  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20StakingPool.sol\":28417:28764  function withdraw(\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":29626:31227  function notifyRewardAmount(\r... */\n    tag_52:\n        /* \"contracts/ERC20StakingPool.sol\":21397:21415  rewardDistribution */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":21381:21415  _msgSender() == rewardDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":21381:21393  _msgSender() */\n      tag_120\n        /* \"contracts/ERC20StakingPool.sol\":21381:21391  _msgSender */\n      tag_104\n        /* \"contracts/ERC20StakingPool.sol\":21381:21393  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC20StakingPool.sol\":21381:21415  _msgSender() == rewardDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":21359:21476  require(\r... */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/ERC20StakingPool.sol\":29748:29749  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      tag_123\n        /* \"contracts/ERC20StakingPool.sol\":25780:25794  rewardPerToken */\n      tag_77\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ERC20StakingPool.sol\":25757:25777  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/ERC20StakingPool.sol\":25757:25796  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      tag_124\n        /* \"contracts/ERC20StakingPool.sol\":25888:25912  lastTimeRewardApplicable */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC20StakingPool.sol\":25871:25885  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":25871:25914  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25988:25989  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":25969:25976  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n      tag_125\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      tag_126\n        /* \"contracts/ERC20StakingPool.sol\":26101:26108  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":26094:26100  earned */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ERC20StakingPool.sol\":26075:26082  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26083:26090  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26075:26109  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26231:26251  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":26197:26219  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26220:26227  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26197:26251  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n    tag_125:\n        /* \"contracts/ERC20StakingPool.sol\":29829:29838  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":29811:29826  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":29811:29838  block.timestamp > starttime */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":29807:31220  if (block.timestamp > starttime) {\r... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":29929:29941  periodFinish */\n      sload(0x08)\n        /* \"contracts/ERC20StakingPool.sol\":29910:29925  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":29910:29941  block.timestamp >= periodFinish */\n      lt\n        /* \"contracts/ERC20StakingPool.sol\":29906:30525  if (block.timestamp >= periodFinish) {\r... */\n      tag_129\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":30032:30052  reward.div(DURATION) */\n      tag_130\n        /* \"contracts/ERC20StakingPool.sol\":30043:30051  DURATION */\n      sload(0x06)\n        /* \"contracts/ERC20StakingPool.sol\":30032:30038  reward */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":30032:30042  reward.div */\n      tag_100\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30032:30052  reward.div(DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/ERC20StakingPool.sol\":30019:30029  rewardRate */\n      0x09\n        /* \"contracts/ERC20StakingPool.sol\":30019:30052  rewardRate = reward.div(DURATION) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29906:30525  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_131)\n    tag_129:\n        /* \"contracts/ERC20StakingPool.sol\":30156:30173  uint256 remaining */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":30176:30209  periodFinish.sub(block.timestamp) */\n      tag_132\n        /* \"contracts/ERC20StakingPool.sol\":30193:30208  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":30176:30188  periodFinish */\n      sload(0x08)\n        /* \"contracts/ERC20StakingPool.sol\":30176:30192  periodFinish.sub */\n      tag_97\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30176:30209  periodFinish.sub(block.timestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC20StakingPool.sol\":30156:30209  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":30319:30335  uint256 leftover */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":30338:30363  remaining.mul(rewardRate) */\n      tag_133\n        /* \"contracts/ERC20StakingPool.sol\":30352:30362  rewardRate */\n      sload(0x09)\n        /* \"contracts/ERC20StakingPool.sol\":30338:30347  remaining */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":30338:30351  remaining.mul */\n      tag_99\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30338:30363  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/ERC20StakingPool.sol\":30319:30363  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":30475:30509  reward.add(leftover).div(DURATION) */\n      tag_134\n        /* \"contracts/ERC20StakingPool.sol\":30500:30508  DURATION */\n      sload(0x06)\n        /* \"contracts/ERC20StakingPool.sol\":30475:30495  reward.add(leftover) */\n      tag_135\n        /* \"contracts/ERC20StakingPool.sol\":30486:30494  leftover */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":30475:30481  reward */\n      dup8\n        /* \"contracts/ERC20StakingPool.sol\":30475:30485  reward.add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30475:30495  reward.add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/ERC20StakingPool.sol\":30475:30499  reward.add(leftover).div */\n      tag_100\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30475:30509  reward.add(leftover).div(DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/ERC20StakingPool.sol\":30462:30472  rewardRate */\n      0x09\n        /* \"contracts/ERC20StakingPool.sol\":30462:30509  rewardRate = reward.add(leftover).div(DURATION) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29906:30525  if (block.timestamp >= periodFinish) {\r... */\n      pop\n      pop\n    tag_131:\n        /* \"contracts/ERC20StakingPool.sol\":30605:30620  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":30588:30602  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":30588:30620  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":30703:30732  block.timestamp.add(DURATION) */\n      tag_136\n        /* \"contracts/ERC20StakingPool.sol\":30723:30731  DURATION */\n      sload(0x06)\n        /* \"contracts/ERC20StakingPool.sol\":30703:30718  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":30703:30722  block.timestamp.add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30703:30732  block.timestamp.add(DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/ERC20StakingPool.sol\":30688:30700  periodFinish */\n      0x08\n        /* \"contracts/ERC20StakingPool.sol\":30688:30732  periodFinish = block.timestamp.add(DURATION) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":30793:30812  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"contracts/ERC20StakingPool.sol\":30805:30811  reward */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":30793:30812  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ERC20StakingPool.sol\":29807:31220  if (block.timestamp > starttime) {\r... */\n      jump(tag_137)\n    tag_128:\n        /* \"contracts/ERC20StakingPool.sol\":30911:30931  reward.div(DURATION) */\n      tag_138\n        /* \"contracts/ERC20StakingPool.sol\":30922:30930  DURATION */\n      sload(0x06)\n        /* \"contracts/ERC20StakingPool.sol\":30911:30917  reward */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":30911:30921  reward.div */\n      tag_100\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":30911:30931  reward.div(DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/ERC20StakingPool.sol\":30898:30908  rewardRate */\n      0x09\n        /* \"contracts/ERC20StakingPool.sol\":30898:30931  rewardRate = reward.div(DURATION) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":31013:31022  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":30996:31010  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":30996:31022  lastUpdateTime = starttime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":31105:31128  starttime.add(DURATION) */\n      tag_139\n        /* \"contracts/ERC20StakingPool.sol\":31119:31127  DURATION */\n      sload(0x06)\n        /* \"contracts/ERC20StakingPool.sol\":31105:31114  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":31105:31118  starttime.add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":31105:31128  starttime.add(DURATION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/ERC20StakingPool.sol\":31090:31102  periodFinish */\n      0x08\n        /* \"contracts/ERC20StakingPool.sol\":31090:31128  periodFinish = starttime.add(DURATION) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":31189:31208  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"contracts/ERC20StakingPool.sol\":31201:31207  reward */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":31189:31208  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ERC20StakingPool.sol\":29807:31220  if (block.timestamp > starttime) {\r... */\n    tag_137:\n        /* \"contracts/ERC20StakingPool.sol\":21487:21488  _ */\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29626:31227  function notifyRewardAmount(\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":29030:29533  function getReward() public updateReward(msg.sender) checkStart {\r... */\n    tag_54:\n        /* \"contracts/ERC20StakingPool.sol\":29071:29081  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      tag_141\n        /* \"contracts/ERC20StakingPool.sol\":25780:25794  rewardPerToken */\n      tag_77\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ERC20StakingPool.sol\":25757:25777  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/ERC20StakingPool.sol\":25757:25796  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      tag_142\n        /* \"contracts/ERC20StakingPool.sol\":25888:25912  lastTimeRewardApplicable */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC20StakingPool.sol\":25871:25885  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":25871:25914  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25988:25989  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":25969:25976  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n      tag_143\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      tag_144\n        /* \"contracts/ERC20StakingPool.sol\":26101:26108  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":26094:26100  earned */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/ERC20StakingPool.sol\":26075:26082  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26083:26090  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26075:26109  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26231:26251  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":26197:26219  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26220:26227  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26197:26251  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n    tag_143:\n        /* \"contracts/ERC20StakingPool.sol\":25501:25510  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":25482:25497  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":25482:25510  block.timestamp >= starttime */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":25474:25542  require(block.timestamp >= starttime, 'LPTokenSharePool: not start') */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c50546f6b656e5368617265506f6f6c3a206e6f742073746172740000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/ERC20StakingPool.sol\":29157:29171  uint256 reward */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":29174:29192  earned(msg.sender) */\n      tag_148\n        /* \"contracts/ERC20StakingPool.sol\":29181:29191  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":29174:29180  earned */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":29174:29192  earned(msg.sender) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ERC20StakingPool.sol\":29157:29192  uint256 reward = earned(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29249:29250  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":29240:29246  reward */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":29240:29250  reward > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":29236:29526  if (reward > 0) {\r... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":29340:29341  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":29318:29325  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":29318:29337  rewards[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":29326:29336  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":29318:29337  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":29318:29341  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29385:29423  token.safeTransfer(msg.sender, reward) */\n      tag_150\n        /* \"contracts/ERC20StakingPool.sol\":29404:29414  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":29416:29422  reward */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":29385:29390  token */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":29385:29403  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":29385:29423  token.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC20StakingPool.sol\":29495:29505  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":29484:29514  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/ERC20StakingPool.sol\":29507:29513  reward */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":29484:29514  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20StakingPool.sol\":29236:29526  if (reward > 0) {\r... */\n    tag_149:\n        /* \"contracts/ERC20StakingPool.sol\":25553:25554  _ */\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":29030:29533  function getReward() public updateReward(msg.sender) checkStart {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_57:\n        /* \"contracts/ERC20StakingPool.sol\":19930:19937  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19957:19966  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":19957:19975  _balances[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19967:19974  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":19957:19975  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":19950:19975  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":15534:15682  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_59:\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      tag_154\n        /* \"contracts/ERC20StakingPool.sol\":15114:15124  _msgSender */\n      tag_104\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15110  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":15096:15163  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/ERC20StakingPool.sol\":15641:15642  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":15604:15644  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15625:15631  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15604:15644  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20StakingPool.sol\":15672:15673  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":15655:15661  _owner */\n      0x03\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":15655:15674  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":15534:15682  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24423:24452  uint256 public rewardRate = 0 */\n    tag_61:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":26444:26624  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_63:\n        /* \"contracts/ERC20StakingPool.sol\":26501:26508  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26577:26616  Math.min(block.timestamp, periodFinish) */\n      tag_158\n        /* \"contracts/ERC20StakingPool.sol\":26586:26601  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":26603:26615  periodFinish */\n      sload(0x08)\n        /* \"contracts/ERC20StakingPool.sol\":26577:26585  Math.min */\n      tag_159\n        /* \"contracts/ERC20StakingPool.sol\":26577:26616  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/ERC20StakingPool.sol\":26570:26616  return Math.min(block.timestamp, periodFinish) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26444:26624  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24665:24722  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_66:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24271:24295  uint256 public starttime */\n    tag_68:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":14892:14971  function owner() public view returns (address) {\r... */\n    tag_70:\n        /* \"contracts/ERC20StakingPool.sol\":14930:14937  address */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":14957:14963  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":14950:14963  return _owner */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":14892:14971  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":27975:28310  function stake(\r... */\n    tag_73:\n        /* \"contracts/ERC20StakingPool.sol\":28051:28061  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      tag_162\n        /* \"contracts/ERC20StakingPool.sol\":25780:25794  rewardPerToken */\n      tag_77\n        /* \"contracts/ERC20StakingPool.sol\":25780:25796  rewardPerToken() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ERC20StakingPool.sol\":25757:25777  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/ERC20StakingPool.sol\":25757:25796  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      tag_163\n        /* \"contracts/ERC20StakingPool.sol\":25888:25912  lastTimeRewardApplicable */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":25888:25914  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/ERC20StakingPool.sol\":25871:25885  lastUpdateTime */\n      0x0a\n        /* \"contracts/ERC20StakingPool.sol\":25871:25914  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25988:25989  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":25969:25976  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":25969:25990  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n      tag_164\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      tag_165\n        /* \"contracts/ERC20StakingPool.sol\":26101:26108  account */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":26094:26100  earned */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":26094:26109  earned(account) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/ERC20StakingPool.sol\":26075:26082  rewards */\n      0x0d\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26083:26090  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26075:26091  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26075:26109  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26231:26251  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":26197:26219  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26220:26227  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":26197:26228  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":26197:26251  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":25965:26263  if (account != address(0)) {\r... */\n    tag_164:\n        /* \"contracts/ERC20StakingPool.sol\":25501:25510  starttime */\n      sload(0x07)\n        /* \"contracts/ERC20StakingPool.sol\":25482:25497  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20StakingPool.sol\":25482:25510  block.timestamp >= starttime */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":25474:25542  require(block.timestamp >= starttime, 'LPTokenSharePool: not start') */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4c50546f6b656e5368617265506f6f6c3a206e6f742073746172740000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/ERC20StakingPool.sol\":28129:28130  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":28120:28126  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":28120:28130  amount > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":28112:28174  require(amount > 0, 'HUSDGOCLPTokenSharePool: Cannot stake 0') */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9ef6714deeebfeb945a862ced486e6902694724a8279842e470c950ebd97af1c\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/ERC20StakingPool.sol\":28210:28229  super.stake(amount) */\n      tag_170\n        /* \"contracts/ERC20StakingPool.sol\":28222:28228  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":28210:28221  super.stake */\n      tag_171\n        /* \"contracts/ERC20StakingPool.sol\":28210:28229  super.stake(amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ERC20StakingPool.sol\":28283:28293  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":28276:28302  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/ERC20StakingPool.sol\":28295:28301  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":28276:28302  Staked(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20StakingPool.sol\":27975:28310  function stake(\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24495:24524  uint256 public lastUpdateTime */\n    tag_75:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":26719:27280  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_77:\n        /* \"contracts/ERC20StakingPool.sol\":26766:26773  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":26827:26828  0 */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":26810:26823  totalSupply() */\n      tag_173\n        /* \"contracts/ERC20StakingPool.sol\":26810:26821  totalSupply */\n      tag_44\n        /* \"contracts/ERC20StakingPool.sol\":26810:26823  totalSupply() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/ERC20StakingPool.sol\":26810:26828  totalSupply() == 0 */\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":26806:26884  if (totalSupply() == 0) {\r... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":26852:26872  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":26845:26872  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_172)\n        /* \"contracts/ERC20StakingPool.sol\":26806:26884  if (totalSupply() == 0) {\r... */\n    tag_174:\n        /* \"contracts/ERC20StakingPool.sol\":27035:27272  rewardPerTokenStored.add(\r... */\n      tag_175\n        /* \"contracts/ERC20StakingPool.sol\":27078:27257  lastTimeRewardApplicable()\r... */\n      tag_176\n        /* \"contracts/ERC20StakingPool.sol\":27243:27256  totalSupply() */\n      tag_177\n        /* \"contracts/ERC20StakingPool.sol\":27243:27254  totalSupply */\n      tag_44\n        /* \"contracts/ERC20StakingPool.sol\":27243:27256  totalSupply() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/ERC20StakingPool.sol\":27078:27216  lastTimeRewardApplicable()\r... */\n      tag_178\n        /* \"contracts/ERC20StakingPool.sol\":27211:27215  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ERC20StakingPool.sol\":27078:27184  lastTimeRewardApplicable()\r... */\n      tag_179\n        /* \"contracts/ERC20StakingPool.sol\":27173:27183  rewardRate */\n      sload(0x09)\n        /* \"contracts/ERC20StakingPool.sol\":27078:27146  lastTimeRewardApplicable()\r... */\n      tag_180\n        /* \"contracts/ERC20StakingPool.sol\":27131:27145  lastUpdateTime */\n      sload(0x0a)\n        /* \"contracts/ERC20StakingPool.sol\":27078:27104  lastTimeRewardApplicable() */\n      tag_181\n        /* \"contracts/ERC20StakingPool.sol\":27078:27102  lastTimeRewardApplicable */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":27078:27104  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/ERC20StakingPool.sol\":27078:27130  lastTimeRewardApplicable()\r... */\n      tag_97\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27078:27146  lastTimeRewardApplicable()\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contracts/ERC20StakingPool.sol\":27078:27172  lastTimeRewardApplicable()\r... */\n      tag_99\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27078:27184  lastTimeRewardApplicable()\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/ERC20StakingPool.sol\":27078:27210  lastTimeRewardApplicable()\r... */\n      tag_99\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27078:27216  lastTimeRewardApplicable()\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/ERC20StakingPool.sol\":27078:27242  lastTimeRewardApplicable()\r... */\n      tag_100\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27078:27257  lastTimeRewardApplicable()\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/ERC20StakingPool.sol\":27035:27055  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/ERC20StakingPool.sol\":27035:27059  rewardPerTokenStored.add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":27035:27272  rewardPerTokenStored.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC20StakingPool.sol\":27015:27272  return\r... */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":26719:27280  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_172:\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":19429:19446  IERC20 public lpt */\n    tag_79:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24567:24602  uint256 public rewardPerTokenStored */\n    tag_81:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":28810:28978  function exit() external {\r... */\n    tag_83:\n        /* \"contracts/ERC20StakingPool.sol\":28892:28923  withdraw(balanceOf(msg.sender)) */\n      tag_183\n        /* \"contracts/ERC20StakingPool.sol\":28901:28922  balanceOf(msg.sender) */\n      tag_184\n        /* \"contracts/ERC20StakingPool.sol\":28911:28921  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":28901:28910  balanceOf */\n      tag_57\n        /* \"contracts/ERC20StakingPool.sol\":28901:28922  balanceOf(msg.sender) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/ERC20StakingPool.sol\":28892:28900  withdraw */\n      tag_49\n        /* \"contracts/ERC20StakingPool.sol\":28892:28923  withdraw(balanceOf(msg.sender)) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/ERC20StakingPool.sol\":28959:28970  getReward() */\n      tag_185\n        /* \"contracts/ERC20StakingPool.sol\":28959:28968  getReward */\n      tag_54\n        /* \"contracts/ERC20StakingPool.sol\":28959:28970  getReward() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/ERC20StakingPool.sol\":28810:28978  function exit() external {\r... */\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24349:24380  uint256 public periodFinish = 0 */\n    tag_85:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":15837:16081  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_88:\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      tag_187\n        /* \"contracts/ERC20StakingPool.sol\":15114:15124  _msgSender */\n      tag_104\n        /* \"contracts/ERC20StakingPool.sol\":15114:15126  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15110  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15104:15126  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":15096:15163  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/ERC20StakingPool.sol\":15946:15947  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":15926:15948  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":15926:15934  newOwner */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":15926:15948  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":15918:15991  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/ERC20StakingPool.sol\":16036:16044  newOwner */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":16007:16045  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":16028:16034  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":16007:16045  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20StakingPool.sol\":16065:16073  newOwner */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":16056:16062  _owner */\n      0x03\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":16056:16073  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":15837:16081  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":24135:24154  IERC20 public token */\n    tag_90:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":3428:3564  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_97:\n        /* \"contracts/ERC20StakingPool.sol\":3486:3493  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_192\n        /* \"contracts/ERC20StakingPool.sol\":3517:3518  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3520:3521  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3513:3516  sub */\n      tag_193\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_192:\n        /* \"contracts/ERC20StakingPool.sol\":3506:3556  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3428:3564  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":4318:4789  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_99:\n        /* \"contracts/ERC20StakingPool.sol\":4376:4383  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":4626:4627  0 */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":4621:4622  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":4621:4627  a == 0 */\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":4617:4664  if (a == 0) {\r... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":4651:4652  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":4644:4652  return 0 */\n      swap1\n      pop\n      jump(tag_194)\n        /* \"contracts/ERC20StakingPool.sol\":4617:4664  if (a == 0) {\r... */\n    tag_195:\n        /* \"contracts/ERC20StakingPool.sol\":4676:4685  uint256 c */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":4692:4693  b */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":4688:4689  a */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":4688:4693  a * b */\n      mul\n        /* \"contracts/ERC20StakingPool.sol\":4676:4693  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4721:4722  b */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":4716:4717  a */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":4712:4713  c */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":4712:4717  c / a */\n      dup2\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      div\n        /* \"contracts/ERC20StakingPool.sol\":4712:4722  c / a == b */\n      eq\n        /* \"contracts/ERC20StakingPool.sol\":4704:4760  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/ERC20StakingPool.sol\":4780:4781  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":4773:4781  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4318:4789  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_194:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":5265:5397  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_100:\n        /* \"contracts/ERC20StakingPool.sol\":5323:5330  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":5350:5389  div(a, b, \"SafeMath: division by zero\") */\n      tag_199\n        /* \"contracts/ERC20StakingPool.sol\":5354:5355  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":5357:5358  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":5350:5389  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":5350:5353  div */\n      tag_200\n        /* \"contracts/ERC20StakingPool.sol\":5350:5389  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_199:\n        /* \"contracts/ERC20StakingPool.sol\":5343:5389  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":5265:5397  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":2964:3145  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_101:\n        /* \"contracts/ERC20StakingPool.sol\":3022:3029  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3042:3051  uint256 c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":3058:3059  b */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":3054:3055  a */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":3054:3059  a + b */\n      add\n        /* \"contracts/ERC20StakingPool.sol\":3042:3059  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3083:3084  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3078:3079  c */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":3078:3084  c >= a */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":3070:3116  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/ERC20StakingPool.sol\":3136:3137  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":3129:3137  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":2964:3145  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":14037:14143  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_104:\n        /* \"contracts/ERC20StakingPool.sol\":14090:14105  address payable */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":14125:14135  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":14118:14135  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":14037:14143  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":20511:21056  function withdraw(uint256 amount) public virtual {\r... */\n    tag_118:\n        /* \"contracts/ERC20StakingPool.sol\":20608:20629  uint256 directorShare */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20632:20641  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20632:20653  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20642:20652  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20632:20653  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20608:20653  uint256 directorShare = _balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20741:20747  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20724:20737  directorShare */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20724:20747  directorShare >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":20716:20795  require(directorShare >= amount, 'withdraw request greater than staked amount') */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/ERC20StakingPool.sol\":20846:20870  _totalSupply.sub(amount) */\n      tag_206\n        /* \"contracts/ERC20StakingPool.sol\":20863:20869  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":20846:20858  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":20846:20862  _totalSupply.sub */\n      tag_97\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20846:20870  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/ERC20StakingPool.sol\":20831:20843  _totalSupply */\n      0x01\n        /* \"contracts/ERC20StakingPool.sol\":20831:20870  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20930:20963  _balances[msg.sender].sub(amount) */\n      tag_207\n        /* \"contracts/ERC20StakingPool.sol\":20956:20962  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":20930:20939  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20930:20951  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20940:20950  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20930:20951  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20930:20955  _balances[msg.sender].sub */\n      tag_97\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20930:20963  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/ERC20StakingPool.sol\":20906:20915  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20906:20927  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20916:20926  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20906:20927  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":20906:20963  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":21012:21048  lpt.safeTransfer(msg.sender, amount) */\n      tag_208\n        /* \"contracts/ERC20StakingPool.sol\":21029:21039  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":21041:21047  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":21012:21015  lpt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":21012:21028  lpt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":21012:21048  lpt.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/ERC20StakingPool.sol\":20511:21056  function withdraw(uint256 amount) public virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":16178:16355  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_151:\n        /* \"contracts/ERC20StakingPool.sol\":16261:16347  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_210\n        /* \"contracts/ERC20StakingPool.sol\":16281:16286  token */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":16311:16334  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/ERC20StakingPool.sol\":16336:16338  to */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16340:16345  value */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16288:16346  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":16261:16280  _callOptionalReturn */\n      tag_211\n        /* \"contracts/ERC20StakingPool.sol\":16261:16347  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/ERC20StakingPool.sol\":16178:16355  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":7692:7798  function min(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_159:\n        /* \"contracts/ERC20StakingPool.sol\":7750:7757  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":7781:7782  b */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":7777:7778  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":7777:7782  a < b */\n      lt\n        /* \"contracts/ERC20StakingPool.sol\":7777:7790  a < b ? a : b */\n      tag_213\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":7789:7790  b */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":7777:7790  a < b ? a : b */\n      jump(tag_214)\n    tag_213:\n        /* \"contracts/ERC20StakingPool.sol\":7785:7786  a */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":7777:7790  a < b ? a : b */\n    tag_214:\n        /* \"contracts/ERC20StakingPool.sol\":7770:7790  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":7692:7798  function min(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":20085:20423  function stake(uint256 amount) public virtual {\r... */\n    tag_171:\n        /* \"contracts/ERC20StakingPool.sol\":20182:20206  _totalSupply.add(amount) */\n      tag_216\n        /* \"contracts/ERC20StakingPool.sol\":20199:20205  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20182:20194  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":20182:20198  _totalSupply.add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20182:20206  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/ERC20StakingPool.sol\":20167:20179  _totalSupply */\n      0x01\n        /* \"contracts/ERC20StakingPool.sol\":20167:20206  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20272:20305  _balances[msg.sender].add(amount) */\n      tag_217\n        /* \"contracts/ERC20StakingPool.sol\":20298:20304  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20272:20281  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20272:20293  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20282:20292  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20272:20293  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20272:20297  _balances[msg.sender].add */\n      tag_101\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20272:20305  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/ERC20StakingPool.sol\":20248:20257  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20248:20269  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20258:20268  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20248:20269  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":20248:20305  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20360:20415  lpt.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_218\n        /* \"contracts/ERC20StakingPool.sol\":20381:20391  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20401:20405  this */\n      address\n        /* \"contracts/ERC20StakingPool.sol\":20408:20414  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":20360:20363  lpt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":20360:20380  lpt.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20360:20415  lpt.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/ERC20StakingPool.sol\":20085:20423  function stake(uint256 amount) public virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":3867:4059  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_193:\n        /* \"contracts/ERC20StakingPool.sol\":3953:3960  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3986:3987  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3981:3982  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3981:3987  b <= a */\n      gt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":3989:4001  errorMessage */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":3973:4002  require(b <= a, errorMessage) */\n      swap1\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_222:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_224\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_222)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_225:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4013:4022  uint256 c */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":4029:4030  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":4025:4026  a */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":4025:4030  a - b */\n      sub\n        /* \"contracts/ERC20StakingPool.sol\":4013:4030  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4050:4051  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":4043:4051  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3867:4059  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":5893:6171  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_200:\n        /* \"contracts/ERC20StakingPool.sol\":5979:5986  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":6011:6012  0 */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":6007:6008  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":6007:6012  b > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":6014:6026  errorMessage */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":5999:6027  require(b > 0, errorMessage) */\n      swap1\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_228:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_230\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_228)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_231\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_231:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":6038:6047  uint256 c */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":6054:6055  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":6050:6051  a */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":6050:6055  a / b */\n      dup2\n      tag_232\n      jumpi\n      invalid\n    tag_232:\n      div\n        /* \"contracts/ERC20StakingPool.sol\":6038:6055  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":6162:6163  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":6155:6163  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":5893:6171  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":18483:19244  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_211:\n        /* \"contracts/ERC20StakingPool.sol\":18907:18930  bytes memory returndata */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_234\n        /* \"contracts/ERC20StakingPool.sol\":18961:18965  data */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":18941:18946  token */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":18933:18960  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_235\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/ERC20StakingPool.sol\":18907:19002  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19037:19038  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19017:19027  returndata */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":19017:19034  returndata.length */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":19017:19038  returndata.length > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":19013:19237  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":19159:19169  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":19148:19178  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19140:19225  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/ERC20StakingPool.sol\":19013:19237  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_236:\n        /* \"contracts/ERC20StakingPool.sol\":18483:19244  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":16363:16568  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_219:\n        /* \"contracts/ERC20StakingPool.sol\":16464:16560  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_240\n        /* \"contracts/ERC20StakingPool.sol\":16484:16489  token */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16514:16541  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/ERC20StakingPool.sol\":16543:16547  from */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16549:16551  to */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16553:16558  value */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16491:16559  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":16464:16483  _callOptionalReturn */\n      tag_211\n        /* \"contracts/ERC20StakingPool.sol\":16464:16560  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/ERC20StakingPool.sol\":16363:16568  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":11643:11839  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_235:\n        /* \"contracts/ERC20StakingPool.sol\":11746:11758  bytes memory */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":11778:11831  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_242\n        /* \"contracts/ERC20StakingPool.sol\":11801:11807  target */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":11809:11813  data */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":11815:11816  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":11818:11830  errorMessage */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":11778:11800  _functionCallWithValue */\n      tag_243\n        /* \"contracts/ERC20StakingPool.sol\":11778:11831  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/ERC20StakingPool.sol\":11771:11831  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":11643:11839  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":13020:13999  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_243:\n        /* \"contracts/ERC20StakingPool.sol\":13150:13162  bytes memory */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":13183:13201  isContract(target) */\n      tag_245\n        /* \"contracts/ERC20StakingPool.sol\":13194:13200  target */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":13183:13193  isContract */\n      tag_246\n        /* \"contracts/ERC20StakingPool.sol\":13183:13201  isContract(target) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/ERC20StakingPool.sol\":13175:13235  require(isContract(target), \"Address: call to non-contract\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/ERC20StakingPool.sol\":13309:13321  bool success */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":13323:13346  bytes memory returndata */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":13350:13356  target */\n      dup7\n        /* \"contracts/ERC20StakingPool.sol\":13350:13361  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":13370:13378  weiValue */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":13381:13385  data */\n      dup8\n        /* \"contracts/ERC20StakingPool.sol\":13350:13386  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_248:\n      0x20\n      dup4\n      lt\n      tag_250\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_248)\n    tag_250:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_253\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_252)\n    tag_253:\n      0x60\n      swap2\n      pop\n    tag_252:\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":13308:13386  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":13401:13408  success */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":13397:13992  if (success) {\r... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":13432:13442  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13425:13442  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_244)\n        /* \"contracts/ERC20StakingPool.sol\":13397:13992  if (success) {\r... */\n    tag_254:\n        /* \"contracts/ERC20StakingPool.sol\":13566:13567  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":13546:13556  returndata */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":13546:13563  returndata.length */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":13546:13567  returndata.length > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":13542:13981  if (returndata.length > 0) {\r... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":13809:13819  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13803:13820  mload(returndata) */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":13870:13885  returndata_size */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13857:13867  returndata */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":13853:13855  32 */\n      0x20\n        /* \"contracts/ERC20StakingPool.sol\":13849:13868  add(32, returndata) */\n      add\n        /* \"contracts/ERC20StakingPool.sol\":13842:13886  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":13757:13905  {\r... */\n    tag_256:\n        /* \"contracts/ERC20StakingPool.sol\":13952:13964  errorMessage */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":13945:13965  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_258:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_260\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_258)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_261\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_261:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":13020:13999  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_244:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":8725:9147  function isContract(address account) internal view returns (bool) {\r... */\n    tag_246:\n        /* \"contracts/ERC20StakingPool.sol\":8785:8789  bool */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":8993:9005  uint256 size */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":9104:9111  account */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":9092:9112  extcodesize(account) */\n      extcodesize\n        /* \"contracts/ERC20StakingPool.sol\":9084:9112  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":9138:9139  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":9131:9135  size */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":9131:9139  size > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":9124:9139  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":8725:9147  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9ef6714deeebfeb945a862ced486e6902694724a8279842e470c950ebd97af1c 48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f74207374616b652030\n    data_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856 43616c6c6572206973206e6f742072657761726420646973747269627574696f6e\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_e85ee5087a90428432078dbd8d4e57ecaadd93cfcfac4363407006c688ba18f8 48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f742077697468647261772030\n    data_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2 776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74\n\n    auxdata: 0xa264697066735822122004f6ee5a688900d0b198d0735a2635609dde5bf4d51908ce54438643d3e53f2a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405262ed4e006006556000600855600060095534801561002157600080fd5b506040516124603803806124608339818101604052606081101561004457600080fd5b8101908080519060200190929190805190602001909291908051906020019092919050505060006100796101a860201b60201c565b905080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806007819055505050506101b0565b600033905090565b6122a1806101bf6000396000f3fe608060405234801561001057600080fd5b50600436106101725760003560e01c806380faa57d116100de578063cd3daf9d11610097578063e9fad8ee11610071578063e9fad8ee14610545578063ebe2b12b1461054f578063f2fde38b1461056d578063fc0c546a146105b157610172565b8063cd3daf9d146104d5578063ce5fc8d0146104f3578063df136d651461052757610172565b806380faa57d146103c15780638b876347146103df5780638da58897146104375780638da5cb5b14610455578063a694fc3a14610489578063c8f33c91146104b757610172565b80632e1a7d4d116101305780632e1a7d4d146102db5780633c6b16ab146103095780633d18b9121461033757806370a0823114610341578063715018a6146103995780637b0a47ee146103a357610172565b80628cc262146101775780630700037d146101cf5780630d68b76114610227578063101114cf1461026b57806318160ddd1461029f5780631be05289146102bd575b600080fd5b6101b96004803603602081101561018d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e5565b6040518082815260200191505060405180910390f35b610211600480360360208110156101e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cc565b6040518082815260200191505060405180910390f35b6102696004803603602081101561023d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e4565b005b6102736107f2565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a7610818565b6040518082815260200191505060405180910390f35b6102c5610822565b6040518082815260200191505060405180910390f35b610307600480360360208110156102f157600080fd5b8101908080359060200190929190505050610828565b005b6103356004803603602081101561031f57600080fd5b8101908080359060200190929190505050610a38565b005b61033f610d3a565b005b6103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f91565b6040518082815260200191505060405180910390f35b6103a1610fda565b005b6103ab611165565b6040518082815260200191505060405180910390f35b6103c961116b565b6040518082815260200191505060405180910390f35b610421600480360360208110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061117e565b6040518082815260200191505060405180910390f35b61043f611196565b6040518082815260200191505060405180910390f35b61045d61119c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b56004803603602081101561049f57600080fd5b81019080803590602001909291905050506111c6565b005b6104bf6113d6565b6040518082815260200191505060405180910390f35b6104dd6113dc565b6040518082815260200191505060405180910390f35b6104fb611474565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61052f611498565b6040518082815260200191505060405180910390f35b61054d61149e565b005b6105576114b9565b6040518082815260200191505060405180910390f35b6105af6004803603602081101561058357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114bf565b005b6105b96116cf565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006106c5600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106b7670de0b6b3a76400006106a9610692600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106846113dc565b6116f590919063ffffffff16565b61069b88610f91565b61173f90919063ffffffff16565b6117c590919063ffffffff16565b61180f90919063ffffffff16565b9050919050565b600d6020528060005260406000206000915090505481565b6106ec611897565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600154905090565b60065481565b336108316113dc565b600b8190555061083f61116b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461090c57610882816105e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421015610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4c50546f6b656e5368617265506f6f6c3a206e6f74207374617274000000000081525060200191505060405180910390fd5b600082116109dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612217602a913960400191505060405180910390fd5b6109e68261189f565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040518082815260200191505060405180910390a25050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a79611897565b73ffffffffffffffffffffffffffffffffffffffff1614610ae5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121cc6021913960400191505060405180910390fd5b6000610aef6113dc565b600b81905550610afd61116b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bca57610b40816105e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421115610cbd576008544210610bfd57610bf2600654836117c590919063ffffffff16565b600981905550610c5f565b6000610c14426008546116f590919063ffffffff16565b90506000610c2d6009548361173f90919063ffffffff16565b9050610c56600654610c48838761180f90919063ffffffff16565b6117c590919063ffffffff16565b60098190555050505b42600a81905550610c7b6006544261180f90919063ffffffff16565b6008819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d826040518082815260200191505060405180910390a1610d36565b610cd2600654836117c590919063ffffffff16565b600981905550600754600a81905550610cf860065460075461180f90919063ffffffff16565b6008819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d826040518082815260200191505060405180910390a15b5050565b33610d436113dc565b600b81905550610d5161116b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e1e57610d94816105e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421015610e96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4c50546f6b656e5368617265506f6f6c3a206e6f74207374617274000000000081525060200191505060405180910390fd5b6000610ea1336105e5565b90506000811115610f8d576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f3e3382600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a3b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610fe2611897565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60095481565b600061117942600854611add565b905090565b600c6020528060005260406000206000915090505481565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b336111cf6113dc565b600b819055506111dd61116b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112aa57611220816105e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600754421015611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4c50546f6b656e5368617265506f6f6c3a206e6f74207374617274000000000081525060200191505060405180910390fd5b6000821161137b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806121a56027913960400191505060405180910390fd5b61138482611af6565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040518082815260200191505060405180910390a25050565b600a5481565b6000806113e7610818565b14156113f757600b549050611471565b61146e61145d611405610818565b61144f670de0b6b3a7640000611441600954611433600a5461142561116b565b6116f590919063ffffffff16565b61173f90919063ffffffff16565b61173f90919063ffffffff16565b6117c590919063ffffffff16565b600b5461180f90919063ffffffff16565b90505b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b6114af6114aa33610f91565b610828565b6114b7610d3a565b565b60085481565b6114c7611897565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611589576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561160f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061215e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061173783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611bf6565b905092915050565b60008083141561175257600090506117bf565b600082840290508284828161176357fe5b04146117ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121846021913960400191505060405180910390fd5b809150505b92915050565b600061180783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611cb6565b905092915050565b60008082840190508381101561188d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561193c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612241602b913960400191505060405180910390fd5b611951826001546116f590919063ffffffff16565b6001819055506119a982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116f590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a37338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a3b9092919063ffffffff16565b5050565b611ad88363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d7c565b505050565b6000818310611aec5781611aee565b825b905092915050565b611b0b8160015461180f90919063ffffffff16565b600181905550611b6381600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461180f90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bf333308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e6b909392919063ffffffff16565b50565b6000838311158290611ca3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c68578082015181840152602081019050611c4d565b50505050905090810190601f168015611c955780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290611d62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d27578082015181840152602081019050611d0c565b50505050905090810190601f168015611d545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611d6e57fe5b049050809150509392505050565b6060611dde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f2c9092919063ffffffff16565b9050600081511115611e6657808060200190516020811015611dff57600080fd5b8101908080519060200190929190505050611e65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806121ed602a913960400191505060405180910390fd5b5b505050565b611f26846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611d7c565b50505050565b6060611f3b8484600085611f44565b90509392505050565b6060611f4f8561214a565b611fc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106120115780518252602082019150602081019050602083039250611fee565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612073576040519150601f19603f3d011682016040523d82523d6000602084013e612078565b606091505b5091509150811561208d578092505050612142565b6000815111156120a05780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121075780820151818401526020810190506120ec565b50505050905090810190601f1680156121345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b600080823b90506000811191505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7748555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f74207374616b65203043616c6c6572206973206e6f742072657761726420646973747269627574696f6e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656448555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f742077697468647261772030776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74a264697066735822122004f6ee5a688900d0b198d0735a2635609dde5bf4d51908ce54438643d3e53f2a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xED4E00 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2460 CODESIZE SUB DUP1 PUSH2 0x2460 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH2 0x79 PUSH2 0x1A8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x22A1 DUP1 PUSH2 0x1BF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9FAD8EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5B1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xCE5FC8D0 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x527 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4B7 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3A3 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xD68B761 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x101114CF EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x1BE05289 EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xFDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DD PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x149E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x557 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x6C5 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6B7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6A9 PUSH2 0x692 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x684 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B DUP9 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x831 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x83F PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90C JUMPI PUSH2 0x882 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2217 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E6 DUP3 PUSH2 0x189F JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA79 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21CC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAEF PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xAFD PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCA JUMPI PUSH2 0xB40 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xCBD JUMPI PUSH1 0x8 SLOAD TIMESTAMP LT PUSH2 0xBFD JUMPI PUSH2 0xBF2 PUSH1 0x6 SLOAD DUP4 PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC14 TIMESTAMP PUSH1 0x8 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2D PUSH1 0x9 SLOAD DUP4 PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC56 PUSH1 0x6 SLOAD PUSH2 0xC48 DUP4 DUP8 PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xC7B PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x6 SLOAD DUP4 PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xCF8 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0xD43 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xD51 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1E JUMPI PUSH2 0xD94 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEA1 CALLER PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF3E CALLER DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE2 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 TIMESTAMP PUSH1 0x8 SLOAD PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x11CF PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x11DD PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AA JUMPI PUSH2 0x1220 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21A5 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1384 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13E7 PUSH2 0x818 JUMP JUMPDEST EQ ISZERO PUSH2 0x13F7 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146E PUSH2 0x145D PUSH2 0x1405 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x144F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1441 PUSH1 0x9 SLOAD PUSH2 0x1433 PUSH1 0xA SLOAD PUSH2 0x1425 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14AF PUSH2 0x14AA CALLER PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0x14B7 PUSH2 0xD3A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14C7 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x215E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1737 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1763 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2184 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x188D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x193C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2241 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1951 DUP3 PUSH1 0x1 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x19A9 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1A37 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1AEC JUMPI DUP2 PUSH2 0x1AEE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH1 0x1 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B63 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BF3 CALLER ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E6B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C4D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C95 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D27 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D0C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1D6E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DDE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1E66 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21ED PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F26 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F3B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F4F DUP6 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x1FC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2011 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2073 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x208D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20A0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2107 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20EC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2134 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F7748555344474F434C50546F PUSH12 0x656E5368617265506F6F6C3A KECCAK256 NUMBER PUSH2 0x6E6E PUSH16 0x74207374616B65203043616C6C657220 PUSH10 0x73206E6F742072657761 PUSH19 0x6420646973747269627574696F6E5361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656448555344474F434C50546F6B656E MSTORE8 PUSH9 0x617265506F6F6C3A20 NUMBER PUSH2 0x6E6E PUSH16 0x74207769746864726177203077697468 PUSH5 0x7261772072 PUSH6 0x717565737420 PUSH8 0x7265617465722074 PUSH9 0x616E207374616B6564 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74A264697066735822122004F6EE5A688900D0B198 0xD0 PUSH20 0x5A2635609DDE5BF4D51908CE54438643D3E53F2A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "24059:7171:0:-:0;;;24226:8;24200:34;;24379:1;24349:31;;24451:1;24423:29;;25203:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14683:17;14703:12;:10;;;:12;;:::i;:::-;14683:32;;14735:9;14726:6;;:18;;;;;;;;;;;;;;;;;;14793:9;14760:43;;14789:1;14760:43;;;;;;;;;;;;14648:163;25302:6;25287:5;;:22;;;;;;;;;;;;;;;;;;25333:8;25320:3;;:22;;;;;;;;;;;;;;;;;;25365:10;25353:9;:22;;;;25203:180;;;24059:7171;;14037:106;14090:15;14125:10;14118:17;;14037:106;:::o;24059:7171::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9FAD8EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x5B1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xCE5FC8D0 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x527 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4B7 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3A3 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xD68B761 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x101114CF EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x1BE05289 EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0xFDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BF PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DD PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x149E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x557 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x6C5 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6B7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6A9 PUSH2 0x692 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x684 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B DUP9 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x831 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x83F PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90C JUMPI PUSH2 0x882 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2217 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E6 DUP3 PUSH2 0x189F JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA79 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21CC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAEF PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xAFD PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCA JUMPI PUSH2 0xB40 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xCBD JUMPI PUSH1 0x8 SLOAD TIMESTAMP LT PUSH2 0xBFD JUMPI PUSH2 0xBF2 PUSH1 0x6 SLOAD DUP4 PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC14 TIMESTAMP PUSH1 0x8 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC2D PUSH1 0x9 SLOAD DUP4 PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC56 PUSH1 0x6 SLOAD PUSH2 0xC48 DUP4 DUP8 PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xC7B PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x6 SLOAD DUP4 PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xCF8 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0xD43 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xD51 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1E JUMPI PUSH2 0xD94 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEA1 CALLER PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF3E CALLER DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE2 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 TIMESTAMP PUSH1 0x8 SLOAD PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x11CF PUSH2 0x13DC JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x11DD PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AA JUMPI PUSH2 0x1220 DUP2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21A5 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1384 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13E7 PUSH2 0x818 JUMP JUMPDEST EQ ISZERO PUSH2 0x13F7 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146E PUSH2 0x145D PUSH2 0x1405 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x144F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1441 PUSH1 0x9 SLOAD PUSH2 0x1433 PUSH1 0xA SLOAD PUSH2 0x1425 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x173F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14AF PUSH2 0x14AA CALLER PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0x14B7 PUSH2 0xD3A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14C7 PUSH2 0x1897 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x215E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1737 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x17BF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1763 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2184 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x188D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x193C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2241 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1951 DUP3 PUSH1 0x1 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x19A9 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1A37 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1AD8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1AEC JUMPI DUP2 PUSH2 0x1AEE JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0B DUP2 PUSH1 0x1 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B63 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x180F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BF3 CALLER ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E6B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1CA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C4D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C95 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D27 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D0C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1D6E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DDE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1E66 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x21ED PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F26 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1D7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F3B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F4F DUP6 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x1FC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2011 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2073 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x208D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20A0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2107 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20EC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2134 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F7748555344474F434C50546F PUSH12 0x656E5368617265506F6F6C3A KECCAK256 NUMBER PUSH2 0x6E6E PUSH16 0x74207374616B65203043616C6C657220 PUSH10 0x73206E6F742072657761 PUSH19 0x6420646973747269627574696F6E5361666545 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656448555344474F434C50546F6B656E MSTORE8 PUSH9 0x617265506F6F6C3A20 NUMBER PUSH2 0x6E6E PUSH16 0x74207769746864726177203077697468 PUSH5 0x7261772072 PUSH6 0x717565737420 PUSH8 0x7265617465722074 PUSH9 0x616E207374616B6564 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74A264697066735822122004F6EE5A688900D0B198 0xD0 PUSH20 0x5A2635609DDE5BF4D51908CE54438643D3E53F2A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "24059:7171:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27380:411;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24777:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21504:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21203:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;19665:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24200:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28417:347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29626:1601;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29030:503;;;:::i;:::-;;19873:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15534:148;;;:::i;:::-;;24423:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26444:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24665:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24271:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14892:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27975:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24495:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26719:561;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19429:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24567:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28810:168;;;:::i;:::-;;24349:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15837:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24135:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27380:411;27434:7;27620:163;27766:7;:16;27774:7;27766:16;;;;;;;;;;;;;;;;27620:123;27738:4;27620:95;27661:53;27682:22;:31;27705:7;27682:31;;;;;;;;;;;;;;;;27661:16;:14;:16::i;:::-;:20;;:53;;;;:::i;:::-;27620:18;27630:7;27620:9;:18::i;:::-;:40;;:95;;;;:::i;:::-;:117;;:123;;;;:::i;:::-;:145;;:163;;;;:::i;:::-;27600:183;;27380:411;;;:::o;24777:42::-;;;;;;;;;;;;;;;;;:::o;21504:178::-;15114:12;:10;:12::i;:::-;15104:22;;:6;;;;;;;;;;;:22;;;15096:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21655:19:::1;21634:18;;:40;;;;;;;;;;;;;;;;;;21504:178:::0;:::o;21203:33::-;;;;;;;;;;;;;:::o;19665:91::-;19709:7;19736:12;;19729:19;;19665:91;:::o;24200:34::-;;;;:::o;28417:347::-;28496:10;25780:16;:14;:16::i;:::-;25757:20;:39;;;;25888:26;:24;:26::i;:::-;25871:14;:43;;;;25988:1;25969:21;;:7;:21;;;25965:298;;26094:15;26101:7;26094:6;:15::i;:::-;26075:7;:16;26083:7;26075:16;;;;;;;;;;;;;;;:34;;;;26231:20;;26197:22;:31;26220:7;26197:31;;;;;;;;;;;;;;;:54;;;;25965:298;25501:9:::1;;25482:15;:28;;25474:68;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;28574:1:::2;28565:6;:10;28557:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28658:22;28673:6;28658:14;:22::i;:::-;28737:10;28727:29;;;28749:6;28727:29;;;;;;;;;;;;;;;;;;28417:347:::0;;:::o;29626:1601::-;21397:18;;;;;;;;;;;21381:34;;:12;:10;:12::i;:::-;:34;;;21359:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29748:1:::1;25780:16;:14;:16::i;:::-;25757:20;:39;;;;25888:26;:24;:26::i;:::-;25871:14;:43;;;;25988:1;25969:21;;:7;:21;;;25965:298;;26094:15;26101:7;26094:6;:15::i;:::-;26075:7;:16;26083:7;26075:16;;;;;;;;;;;;;;;:34;;;;26231:20;;26197:22;:31;26220:7;26197:31;;;;;;;;;;;;;;;:54;;;;25965:298;29829:9:::2;;29811:15;:27;29807:1413;;;29929:12;;29910:15;:31;29906:619;;30032:20;30043:8;;30032:6;:10;;:20;;;;:::i;:::-;30019:10;:33;;;;29906:619;;;30156:17;30176:33;30193:15;30176:12;;:16;;:33;;;;:::i;:::-;30156:53;;30319:16;30338:25;30352:10;;30338:9;:13;;:25;;;;:::i;:::-;30319:44;;30475:34;30500:8;;30475:20;30486:8;30475:6;:10;;:20;;;;:::i;:::-;:24;;:34;;;;:::i;:::-;30462:10;:47;;;;29906:619;;;30605:15;30588:14;:32;;;;30703:29;30723:8;;30703:15;:19;;:29;;;;:::i;:::-;30688:12;:44;;;;30793:19;30805:6;30793:19;;;;;;;;;;;;;;;;;;29807:1413;;;30911:20;30922:8;;30911:6;:10;;:20;;;;:::i;:::-;30898:10;:33;;;;31013:9;;30996:14;:26;;;;31105:23;31119:8;;31105:9;;:13;;:23;;;;:::i;:::-;31090:12;:38;;;;31189:19;31201:6;31189:19;;;;;;;;;;;;;;;;;;29807:1413;21487:1:::1;29626:1601:::0;:::o;29030:503::-;29071:10;25780:16;:14;:16::i;:::-;25757:20;:39;;;;25888:26;:24;:26::i;:::-;25871:14;:43;;;;25988:1;25969:21;;:7;:21;;;25965:298;;26094:15;26101:7;26094:6;:15::i;:::-;26075:7;:16;26083:7;26075:16;;;;;;;;;;;;;;;:34;;;;26231:20;;26197:22;:31;26220:7;26197:31;;;;;;;;;;;;;;;:54;;;;25965:298;25501:9:::1;;25482:15;:28;;25474:68;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;29157:14:::2;29174:18;29181:10;29174:6;:18::i;:::-;29157:35;;29249:1;29240:6;:10;29236:290;;;29340:1;29318:7;:19;29326:10;29318:19;;;;;;;;;;;;;;;:23;;;;29385:38;29404:10;29416:6;29385:5;;;;;;;;;;;:18;;;;:38;;;;;:::i;:::-;29495:10;29484:30;;;29507:6;29484:30;;;;;;;;;;;;;;;;;;29236:290;25553:1;29030:503:::0;:::o;19873:110::-;19930:7;19957:9;:18;19967:7;19957:18;;;;;;;;;;;;;;;;19950:25;;19873:110;;;:::o;15534:148::-;15114:12;:10;:12::i;:::-;15104:22;;:6;;;;;;;;;;;:22;;;15096:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15641:1:::1;15604:40;;15625:6;;;;;;;;;;;15604:40;;;;;;;;;;;;15672:1;15655:6;;:19;;;;;;;;;;;;;;;;;;15534:148::o:0;24423:29::-;;;;:::o;26444:180::-;26501:7;26577:39;26586:15;26603:12;;26577:8;:39::i;:::-;26570:46;;26444:180;:::o;24665:57::-;;;;;;;;;;;;;;;;;:::o;24271:24::-;;;;:::o;14892:79::-;14930:7;14957:6;;;;;;;;;;;14950:13;;14892:79;:::o;27975:335::-;28051:10;25780:16;:14;:16::i;:::-;25757:20;:39;;;;25888:26;:24;:26::i;:::-;25871:14;:43;;;;25988:1;25969:21;;:7;:21;;;25965:298;;26094:15;26101:7;26094:6;:15::i;:::-;26075:7;:16;26083:7;26075:16;;;;;;;;;;;;;;;:34;;;;26231:20;;26197:22;:31;26220:7;26197:31;;;;;;;;;;;;;;;:54;;;;25965:298;25501:9:::1;;25482:15;:28;;25474:68;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;28129:1:::2;28120:6;:10;28112:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28210:19;28222:6;28210:11;:19::i;:::-;28283:10;28276:26;;;28295:6;28276:26;;;;;;;;;;;;;;;;;;27975:335:::0;;:::o;24495:29::-;;;;:::o;26719:561::-;26766:7;26827:1;26810:13;:11;:13::i;:::-;:18;26806:78;;;26852:20;;26845:27;;;;26806:78;27035:237;27078:179;27243:13;:11;:13::i;:::-;27078:138;27211:4;27078:106;27173:10;;27078:68;27131:14;;27078:26;:24;:26::i;:::-;:52;;:68;;;;:::i;:::-;:94;;:106;;;;:::i;:::-;:132;;:138;;;;:::i;:::-;:164;;:179;;;;:::i;:::-;27035:20;;:24;;:237;;;;:::i;:::-;27015:257;;26719:561;;:::o;19429:17::-;;;;;;;;;;;;:::o;24567:35::-;;;;:::o;28810:168::-;28892:31;28901:21;28911:10;28901:9;:21::i;:::-;28892:8;:31::i;:::-;28959:11;:9;:11::i;:::-;28810:168::o;24349:31::-;;;;:::o;15837:244::-;15114:12;:10;:12::i;:::-;15104:22;;:6;;;;;;;;;;;:22;;;15096:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15946:1:::1;15926:22;;:8;:22;;;;15918:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16036:8;16007:38;;16028:6;;;;;;;;;;;16007:38;;;;;;;;;;;;16065:8;16056:6;;:17;;;;;;;;;;;;;;;;;;15837:244:::0;:::o;24135:19::-;;;;;;;;;;;;;:::o;3428:136::-;3486:7;3513:43;3517:1;3520;3513:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;3506:50;;3428:136;;;;:::o;4318:471::-;4376:7;4626:1;4621;:6;4617:47;;;4651:1;4644:8;;;;4617:47;4676:9;4692:1;4688;:5;4676:17;;4721:1;4716;4712;:5;;;;;;:10;4704:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:1;4773:8;;;4318:471;;;;;:::o;5265:132::-;5323:7;5350:39;5354:1;5357;5350:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;5343:46;;5265:132;;;;:::o;2964:181::-;3022:7;3042:9;3058:1;3054;:5;3042:17;;3083:1;3078;:6;;3070:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3136:1;3129:8;;;2964:181;;;;:::o;14037:106::-;14090:15;14125:10;14118:17;;14037:106;:::o;20511:545::-;20608:21;20632:9;:21;20642:10;20632:21;;;;;;;;;;;;;;;;20608:45;;20741:6;20724:13;:23;;20716:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20846:24;20863:6;20846:12;;:16;;:24;;;;:::i;:::-;20831:12;:39;;;;20930:33;20956:6;20930:9;:21;20940:10;20930:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;20906:9;:21;20916:10;20906:21;;;;;;;;;;;;;;;:57;;;;21012:36;21029:10;21041:6;21012:3;;;;;;;;;;:16;;;;:36;;;;;:::i;:::-;20511:545;;:::o;16178:177::-;16261:86;16281:5;16311:23;;;16336:2;16340:5;16288:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16261:19;:86::i;:::-;16178:177;;;:::o;7692:106::-;7750:7;7781:1;7777;:5;:13;;7789:1;7777:13;;;7785:1;7777:13;7770:20;;7692:106;;;;:::o;20085:338::-;20182:24;20199:6;20182:12;;:16;;:24;;;;:::i;:::-;20167:12;:39;;;;20272:33;20298:6;20272:9;:21;20282:10;20272:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;20248:9;:21;20258:10;20248:21;;;;;;;;;;;;;;;:57;;;;20360:55;20381:10;20401:4;20408:6;20360:3;;;;;;;;;;:20;;;;:55;;;;;;:::i;:::-;20085:338;:::o;3867:192::-;3953:7;3986:1;3981;:6;;3989:12;3973:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4013:9;4029:1;4025;:5;4013:17;;4050:1;4043:8;;;3867:192;;;;;:::o;5893:278::-;5979:7;6011:1;6007;:5;6014:12;5999:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6038:9;6054:1;6050;:5;;;;;;6038:17;;6162:1;6155:8;;;5893:278;;;;;:::o;18483:761::-;18907:23;18933:69;18961:4;18933:69;;;;;;;;;;;;;;;;;18941:5;18933:27;;;;:69;;;;;:::i;:::-;18907:95;;19037:1;19017:10;:17;:21;19013:224;;;19159:10;19148:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19140:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19013:224;18483:761;;;:::o;16363:205::-;16464:96;16484:5;16514:27;;;16543:4;16549:2;16553:5;16491:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16464:19;:96::i;:::-;16363:205;;;;:::o;11643:196::-;11746:12;11778:53;11801:6;11809:4;11815:1;11818:12;11778:22;:53::i;:::-;11771:60;;11643:196;;;;;:::o;13020:979::-;13150:12;13183:18;13194:6;13183:10;:18::i;:::-;13175:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13309:12;13323:23;13350:6;:11;;13370:8;13381:4;13350:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13308:78;;;;13401:7;13397:595;;;13432:10;13425:17;;;;;;13397:595;13566:1;13546:10;:17;:21;13542:439;;;13809:10;13803:17;13870:15;13857:10;13853:2;13849:19;13842:44;13757:148;13952:12;13945:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13020:979;;;;;;;:::o;8725:422::-;8785:4;8993:12;9104:7;9092:20;9084:28;;9138:1;9131:4;:8;9124:15;;;8725:422;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1773000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DURATION()": "1139",
								"balanceOf(address)": "1285",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"lastTimeRewardApplicable()": "1117",
								"lastUpdateTime()": "1138",
								"lpt()": "1111",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "1144",
								"periodFinish()": "1071",
								"renounceOwnership()": "24408",
								"rewardDistribution()": "1137",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1094",
								"rewardRate()": "1138",
								"rewards(address)": "1215",
								"setRewardDistribution(address)": "22074",
								"stake(uint256)": "infinite",
								"starttime()": "1072",
								"token()": "1157",
								"totalSupply()": "1125",
								"transferOwnership(address)": "infinite",
								"userRewardPerTokenPaid(address)": "1214",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24226,
									"end": 24234,
									"name": "PUSH",
									"source": 0,
									"value": "ED4E00"
								},
								{
									"begin": 24200,
									"end": 24234,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24200,
									"end": 24234,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24379,
									"end": 24380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24349,
									"end": 24380,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24349,
									"end": 24380,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24451,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24423,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24423,
									"end": 24452,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14683,
									"end": 14700,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 14703,
									"end": 14713,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 14703,
									"end": 14713,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14703,
									"end": 14713,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 14703,
									"end": 14715,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14683,
									"end": 14715,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14683,
									"end": 14715,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14735,
									"end": 14744,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14732,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 14726,
									"end": 14732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14726,
									"end": 14744,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14793,
									"end": 14802,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14789,
									"end": 14790,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14760,
									"end": 14803,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 14648,
									"end": 14811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25302,
									"end": 25308,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25292,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25287,
									"end": 25292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25287,
									"end": 25309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25333,
									"end": 25341,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25323,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25320,
									"end": 25323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25320,
									"end": 25342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25365,
									"end": 25375,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25353,
									"end": 25362,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25353,
									"end": 25375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25353,
									"end": 25375,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25353,
									"end": 25375,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25353,
									"end": 25375,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25203,
									"end": 25383,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14037,
									"end": 14143,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 14037,
									"end": 14143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14090,
									"end": 14105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14125,
									"end": 14135,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 14118,
									"end": 14135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14118,
									"end": 14135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14037,
									"end": 14143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14037,
									"end": 14143,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24059,
									"end": 31230,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004f6ee5a688900d0b198d0735a2635609dde5bf4d51908ce54438643d3e53f2a64736f6c634300060c0033",
									".code": [
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "80FAA57D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "CD3DAF9D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "EBE2B12B"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "CD3DAF9D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "CE5FC8D0"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "DF136D65"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "80FAA57D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "8B876347"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "8DA58897"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "3C6B16AB"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "3D18B912"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "7B0A47EE"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "8CC262"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "700037D"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "D68B761"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "101114CF"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "1BE05289"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24059,
											"end": 31230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27434,
											"end": 27441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27766,
											"end": 27773,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27774,
											"end": 27781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27766,
											"end": 27782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27738,
											"end": 27742,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27682,
											"end": 27704,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27705,
											"end": 27712,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27682,
											"end": 27713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27661,
											"end": 27675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 27661,
											"end": 27677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27661,
											"end": 27677,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27661,
											"end": 27677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 27661,
											"end": 27681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27661,
											"end": 27714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27630,
											"end": 27637,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 27620,
											"end": 27638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27620,
											"end": 27638,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27620,
											"end": 27638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27620,
											"end": 27660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27620,
											"end": 27715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27620,
											"end": 27737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27620,
											"end": 27743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27620,
											"end": 27765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27620,
											"end": 27783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24777,
											"end": 24819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15114,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21655,
											"end": 21674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21634,
											"end": 21652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21634,
											"end": 21674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21504,
											"end": 21682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21236,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19709,
											"end": 19716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19736,
											"end": 19748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19736,
											"end": 19748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24200,
											"end": 24234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28496,
											"end": 28506,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25780,
											"end": 25794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25777,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25888,
											"end": 25912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25885,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 26101,
											"end": 26108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26219,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26220,
											"end": 26227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25497,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28574,
											"end": 28575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28565,
											"end": 28571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28575,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH data",
											"source": 0,
											"value": "E85EE5087A90428432078DBD8D4E57ECAADD93CFCFAC4363407006C688BA18F8"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28557,
											"end": 28622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28658,
											"end": 28680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28673,
											"end": 28679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28658,
											"end": 28672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28658,
											"end": 28680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28658,
											"end": 28680,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28658,
											"end": 28680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28737,
											"end": 28747,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 28749,
											"end": 28755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28756,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28417,
											"end": 28764,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21381,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21381,
											"end": 21391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21381,
											"end": 21393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21381,
											"end": 21393,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21381,
											"end": 21393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21381,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21381,
											"end": 21415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH data",
											"source": 0,
											"value": "AAAFFE5C21FA5C5738339A5C250428887DC295DA86E97CC962477DA488B4D856"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21359,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 29749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25780,
											"end": 25794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25777,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25888,
											"end": 25912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25885,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 26101,
											"end": 26108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26219,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26220,
											"end": 26227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29829,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29829,
											"end": 29838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29838,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29929,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29929,
											"end": 29941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 29925,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 29941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 30043,
											"end": 30051,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30043,
											"end": 30051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30032,
											"end": 30042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 30032,
											"end": 30052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30029,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30019,
											"end": 30052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30052,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30188,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30176,
											"end": 30188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30176,
											"end": 30192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30176,
											"end": 30209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30156,
											"end": 30209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 30352,
											"end": 30362,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30352,
											"end": 30362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30338,
											"end": 30351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 30338,
											"end": 30363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30500,
											"end": 30508,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30500,
											"end": 30508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30486,
											"end": 30494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30481,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30475,
											"end": 30485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30475,
											"end": 30495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30475,
											"end": 30499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30475,
											"end": 30509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30472,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30462,
											"end": 30509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29906,
											"end": 30525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30605,
											"end": 30620,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30602,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30588,
											"end": 30620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30723,
											"end": 30731,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30723,
											"end": 30731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30718,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30703,
											"end": 30722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 30703,
											"end": 30732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30700,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30688,
											"end": 30732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30688,
											"end": 30732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 30805,
											"end": 30811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30793,
											"end": 30812,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30922,
											"end": 30930,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30922,
											"end": 30930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30911,
											"end": 30921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 30911,
											"end": 30931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30908,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30898,
											"end": 30931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31013,
											"end": 31022,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31013,
											"end": 31022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31010,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30996,
											"end": 31022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30996,
											"end": 31022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31119,
											"end": 31127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31119,
											"end": 31127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31114,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31105,
											"end": 31114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31105,
											"end": 31118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31105,
											"end": 31128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31090,
											"end": 31102,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31090,
											"end": 31128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31090,
											"end": 31128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31090,
											"end": 31128,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31090,
											"end": 31128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "PUSH",
											"source": 0,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 31201,
											"end": 31207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31208,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29807,
											"end": 31220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21487,
											"end": 21488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29626,
											"end": 31227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25780,
											"end": 25794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25777,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25888,
											"end": 25912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25885,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26101,
											"end": 26108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26219,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26220,
											"end": 26227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25497,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29181,
											"end": 29191,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 29192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29249,
											"end": 29250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29240,
											"end": 29246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29240,
											"end": 29250,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29236,
											"end": 29526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29340,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29318,
											"end": 29325,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29326,
											"end": 29336,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29318,
											"end": 29337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29318,
											"end": 29341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29404,
											"end": 29414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29416,
											"end": 29422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29385,
											"end": 29390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29385,
											"end": 29403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 29385,
											"end": 29403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29385,
											"end": 29423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29495,
											"end": 29505,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 29507,
											"end": 29513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29484,
											"end": 29514,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29236,
											"end": 29526,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29236,
											"end": 29526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25553,
											"end": 25554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29533,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19930,
											"end": 19937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19966,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19967,
											"end": 19974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15114,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15644,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15672,
											"end": 15673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15655,
											"end": 15661,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15655,
											"end": 15661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15655,
											"end": 15674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24423,
											"end": 24452,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26501,
											"end": 26508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26577,
											"end": 26616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26586,
											"end": 26601,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 26615,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26603,
											"end": 26615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26577,
											"end": 26585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 26577,
											"end": 26616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26577,
											"end": 26616,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26577,
											"end": 26616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26570,
											"end": 26616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26570,
											"end": 26616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26624,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24271,
											"end": 24295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14950,
											"end": 14963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14950,
											"end": 14963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14892,
											"end": 14971,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28051,
											"end": 28061,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25780,
											"end": 25794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25780,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25777,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25757,
											"end": 25796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25888,
											"end": 25912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25888,
											"end": 25914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25885,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25871,
											"end": 25914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25988,
											"end": 25989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25969,
											"end": 25990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26101,
											"end": 26108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26094,
											"end": 26100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26094,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26075,
											"end": 26091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26075,
											"end": 26109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26231,
											"end": 26251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26219,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26220,
											"end": 26227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26197,
											"end": 26228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25965,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25501,
											"end": 25510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25497,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25482,
											"end": 25510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "4C50546F6B656E5368617265506F6F6C3A206E6F742073746172740000000000"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25474,
											"end": 25542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28129,
											"end": 28130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28120,
											"end": 28126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28120,
											"end": 28130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH data",
											"source": 0,
											"value": "9EF6714DEEEBFEB945A862CED486E6902694724A8279842E470C950EBD97AF1C"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28112,
											"end": 28174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28210,
											"end": 28229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28222,
											"end": 28228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28210,
											"end": 28221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28210,
											"end": 28229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28210,
											"end": 28229,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28210,
											"end": 28229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28293,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 28295,
											"end": 28301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28276,
											"end": 28302,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27975,
											"end": 28310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24495,
											"end": 24524,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26827,
											"end": 26828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26810,
											"end": 26823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26810,
											"end": 26821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26810,
											"end": 26823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26810,
											"end": 26823,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26810,
											"end": 26823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26810,
											"end": 26828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26806,
											"end": 26884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26806,
											"end": 26884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26806,
											"end": 26884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26852,
											"end": 26872,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26852,
											"end": 26872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26845,
											"end": 26872,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26806,
											"end": 26884,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26806,
											"end": 26884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27243,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 27243,
											"end": 27254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27243,
											"end": 27256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27243,
											"end": 27256,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 27243,
											"end": 27256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 27211,
											"end": 27215,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 27173,
											"end": 27183,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27173,
											"end": 27183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 27131,
											"end": 27145,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27131,
											"end": 27145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 27078,
											"end": 27102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27078,
											"end": 27104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27078,
											"end": 27104,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 27078,
											"end": 27104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 27078,
											"end": 27130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 27078,
											"end": 27146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27078,
											"end": 27172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 27078,
											"end": 27184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27078,
											"end": 27210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 27078,
											"end": 27216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27078,
											"end": 27242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27078,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27035,
											"end": 27055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 27035,
											"end": 27059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 27035,
											"end": 27272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27015,
											"end": 27272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27015,
											"end": 27272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 27280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24567,
											"end": 24602,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 28923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 28901,
											"end": 28922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 28911,
											"end": 28921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28901,
											"end": 28910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28901,
											"end": 28922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28901,
											"end": 28922,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 28901,
											"end": 28922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 28900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28892,
											"end": 28923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28892,
											"end": 28923,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 28892,
											"end": 28923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28959,
											"end": 28970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 28959,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28959,
											"end": 28970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28959,
											"end": 28970,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 28959,
											"end": 28970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28810,
											"end": 28978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24349,
											"end": 24380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15114,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 15096,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15946,
											"end": 15947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 15934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15926,
											"end": 15948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16036,
											"end": 16044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16028,
											"end": 16034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16045,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16065,
											"end": 16073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16062,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16056,
											"end": 16062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 16081,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24135,
											"end": 24154,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4617,
											"end": 4664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4644,
											"end": 4652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4664,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4617,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4693,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4704,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4773,
											"end": 4781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4773,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4773,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4789,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5350,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5343,
											"end": 5389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5343,
											"end": 5389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14037,
											"end": 14143,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14037,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20642,
											"end": 20652,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH data",
											"source": 0,
											"value": "F29ED7FC561F9739237966A5DD12E925D81E5F10E77BC59C72AF68E298E197A2"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 20863,
											"end": 20869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20846,
											"end": 20858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20846,
											"end": 20862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 20956,
											"end": 20962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20940,
											"end": 20950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20930,
											"end": 20955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20916,
											"end": 20926,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21029,
											"end": 21039,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21041,
											"end": 21047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16281,
											"end": 16286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16340,
											"end": 16345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7782,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7777,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7770,
											"end": 7790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 20199,
											"end": 20205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20182,
											"end": 20198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20298,
											"end": 20304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20282,
											"end": 20292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20272,
											"end": 20297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20257,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20258,
											"end": 20268,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20381,
											"end": 20391,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20405,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20408,
											"end": 20414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6012,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6051,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6171,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 18930,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 18961,
											"end": 18965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 18946,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 19002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19037,
											"end": 19038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19017,
											"end": 19027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16484,
											"end": 16489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11758,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11801,
											"end": 11807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 11816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11778,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13150,
											"end": 13162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13194,
											"end": 13200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13183,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13323,
											"end": 13346,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13350,
											"end": 13356,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13370,
											"end": 13378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13401,
											"end": 13408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13803,
											"end": 13820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13870,
											"end": 13885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13849,
											"end": 13868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13757,
											"end": 13905,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 13757,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13952,
											"end": 13964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9104,
											"end": 9111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9112,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9084,
											"end": 9112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9084,
											"end": 9112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9EF6714DEEEBFEB945A862CED486E6902694724A8279842E470C950EBD97AF1C": "48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f74207374616b652030",
										"AAAFFE5C21FA5C5738339A5C250428887DC295DA86E97CC962477DA488B4D856": "43616c6c6572206973206e6f742072657761726420646973747269627574696f6e",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"E85EE5087A90428432078DBD8D4E57ECAADD93CFCFAC4363407006C688BA18F8": "48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f742077697468647261772030",
										"F29ED7FC561F9739237966A5DD12E925D81E5F10E77BC59C72AF68E298E197A2": "776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DURATION()": "1be05289",
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"lpt()": "ce5fc8d0",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"periodFinish()": "ebe2b12b",
							"renounceOwnership()": "715018a6",
							"rewardDistribution()": "101114cf",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"setRewardDistribution(address)": "0d68b761",
							"stake(uint256)": "a694fc3a",
							"starttime()": "8da58897",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lptoken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"starttime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardDistribution\",\"type\":\"address\"}],\"name\":\"setRewardDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"starttime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"\\u8fd4\\u56de\\u8d26\\u6237\\u4f59\\u989d\",\"params\":{\"account\":\"\\u8d26\\u6237\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u4f59\\u989d\"}},\"constructor\":{\"details\":\"\\u6784\\u9020\\u51fd\\u6570\",\"params\":{\"lptoken_\":\"LPtoken\\u5730\\u5740\",\"starttime_\":\"\\u5f00\\u59cb\\u65f6\\u95f4\",\"token_\":\"token\\u5730\\u5740\"}},\"earned(address)\":{\"details\":\"\\u7528\\u6237\\u5df2\\u5956\\u52b1\\u7684\\u6570\\u91cf\",\"params\":{\"account\":\"\\u7528\\u6237\\u5730\\u5740\"}},\"exit()\":{\"details\":\"\\u9000\\u51fa\"},\"getReward()\":{\"details\":\"\\u83b7\\u53d6\\u5956\\u52b1\"},\"lastTimeRewardApplicable()\":{\"details\":\"\\u8fd4\\u56de\\u5956\\u52b1\\u7684\\u6700\\u540e\\u671f\\u9650\",\"returns\":{\"_0\":\"\\u6700\\u540e\\u671f\\u9650\"}},\"notifyRewardAmount(uint256)\":{\"details\":\"\\u901a\\u77e5\\u5956\\u52b1\\u6570\\u91cf\",\"params\":{\"reward\":\"\\u5956\\u52b1\\u6570\\u91cf\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rewardPerToken()\":{\"details\":\"\\u6bcf\\u4e2a\\u8d28\\u62bcToken\\u7684\\u5956\\u52b1\",\"returns\":{\"_0\":\"\\u5956\\u52b1\\u6570\\u91cf\"}},\"stake(uint256)\":{\"details\":\"\\u8d28\\u62bc\\u6307\\u5b9a\\u6570\\u91cf\\u7684token\",\"params\":{\"amount\":\"\\u8d28\\u62bc\\u6570\\u91cf\"}},\"totalSupply()\":{\"details\":\"\\u8fd4\\u56de\\u603b\\u91cf\",\"returns\":{\"_0\":\"\\u603b\\u91cf\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"\\u63d0\\u6b3e\\u6307\\u5b9a\\u6570\\u989d\\u7684\\u8d28\\u62bctoken\",\"params\":{\"amount\":\"\\u8d28\\u62bc\\u6570\\u91cf\"}}},\"title\":\"LP Token\\u77ff\\u6c60\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DURATION()\":{\"notice\":\"\\u65f6\\u95f4\\u5468\\u671f = 180\\u5929\"},\"lastTimeRewardApplicable()\":{\"notice\":\"\\u5982\\u679c\\u6ca1\\u6709\\u5230\\u8fbe\\u7ed3\\u675f\\u65f6\\u95f4,\\u8fd4\\u56de\\u5f53\\u524d\\u65f6\\u95f4\"},\"lastUpdateTime()\":{\"notice\":\"\\u6700\\u540e\\u66f4\\u65b0\\u65f6\\u95f4\"},\"lpt()\":{\"notice\":\"GoCash LP Token\\u5408\\u7ea6\\u5730\\u5740\"},\"periodFinish()\":{\"notice\":\"\\u7ed3\\u675f\\u65f6\\u95f4\"},\"rewardPerTokenStored()\":{\"notice\":\"\\u50a8\\u5b58\\u5956\\u52b1\\u6570\\u91cf\"},\"rewardRate()\":{\"notice\":\"\\u6bcf\\u79d2\\u5956\\u52b1\\u6570\\u91cf\"},\"rewards(address)\":{\"notice\":\"\\u7528\\u6237\\u672a\\u53d1\\u653e\\u7684\\u5956\\u52b1\\u6570\\u91cf\"},\"starttime()\":{\"notice\":\"\\u5f00\\u59cb\\u65f6\\u95f4\"},\"userRewardPerTokenPaid(address)\":{\"notice\":\"\\u6bcf\\u4e2a\\u8d28\\u62bcToken\\u652f\\u4ed8\\u7528\\u6237\\u7684\\u5956\\u52b1\"}},\"notice\":\"\\u5468\\u671f180\\u5929\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"LPTokenPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 874,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "lpt",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)76"
							},
							{
								"astId": 877,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 882,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 556,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 997,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "rewardDistribution",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1034,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "token",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)76"
							},
							{
								"astId": 1038,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "DURATION",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1041,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "starttime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1045,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "periodFinish",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1049,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "rewardRate",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1052,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1055,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1060,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1065,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenPool",
								"label": "rewards",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)76": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DURATION()": {
								"notice": "时间周期 = 180天"
							},
							"lastTimeRewardApplicable()": {
								"notice": "如果没有到达结束时间,返回当前时间"
							},
							"lastUpdateTime()": {
								"notice": "最后更新时间"
							},
							"lpt()": {
								"notice": "GoCash LP Token合约地址"
							},
							"periodFinish()": {
								"notice": "结束时间"
							},
							"rewardPerTokenStored()": {
								"notice": "储存奖励数量"
							},
							"rewardRate()": {
								"notice": "每秒奖励数量"
							},
							"rewards(address)": {
								"notice": "用户未发放的奖励数量"
							},
							"starttime()": {
								"notice": "开始时间"
							},
							"userRewardPerTokenPaid(address)": {
								"notice": "每个质押Token支付用户的奖励"
							}
						},
						"notice": "周期180天",
						"version": 1
					}
				},
				"LPTokenWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "返回账户余额",
								"params": {
									"account": "账户地址"
								},
								"returns": {
									"_0": "余额"
								}
							},
							"stake(uint256)": {
								"details": "把shushi抵押到Boardroom",
								"params": {
									"amount": "质押数量"
								}
							},
							"totalSupply()": {
								"details": "返回总量",
								"returns": {
									"_0": "总量"
								}
							},
							"withdraw(uint256)": {
								"details": "赎回LPToken",
								"params": {
									"amount": "赎回数量"
								}
							}
						},
						"stateVariables": {
							"_balances": {
								"details": "余额映射"
							},
							"_totalSupply": {
								"details": "质押总量"
							}
						},
						"title": "LP质押合约",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":19287:21059  contract LPTokenWrapper {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":19287:21059  contract LPTokenWrapper {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xce5fc8d0\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":20511:21056  function withdraw(uint256 amount) public virtual {\r... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":20085:20423  function stake(uint256 amount) public virtual {\r... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/ERC20StakingPool.sol\":19429:19446  IERC20 public lpt */\n    tag_7:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n    tag_9:\n        /* \"contracts/ERC20StakingPool.sol\":19709:19716  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19736:19748  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":19729:19748  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19665:19756  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":20511:21056  function withdraw(uint256 amount) public virtual {\r... */\n    tag_12:\n        /* \"contracts/ERC20StakingPool.sol\":20608:20629  uint256 directorShare */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20632:20641  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20632:20653  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20642:20652  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20632:20653  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20608:20653  uint256 directorShare = _balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20741:20747  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20724:20737  directorShare */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20724:20747  directorShare >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":20716:20795  require(directorShare >= amount, 'withdraw request greater than staked amount') */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/ERC20StakingPool.sol\":20846:20870  _totalSupply.sub(amount) */\n      tag_24\n        /* \"contracts/ERC20StakingPool.sol\":20863:20869  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":20846:20858  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":20846:20862  _totalSupply.sub */\n      tag_25\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20846:20870  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_24:\n        /* \"contracts/ERC20StakingPool.sol\":20831:20843  _totalSupply */\n      0x01\n        /* \"contracts/ERC20StakingPool.sol\":20831:20870  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20930:20963  _balances[msg.sender].sub(amount) */\n      tag_26\n        /* \"contracts/ERC20StakingPool.sol\":20956:20962  amount */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":20930:20939  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20930:20951  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20940:20950  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20930:20951  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20930:20955  _balances[msg.sender].sub */\n      tag_25\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20930:20963  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"contracts/ERC20StakingPool.sol\":20906:20915  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20906:20927  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20916:20926  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20906:20927  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":20906:20963  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":21012:21048  lpt.safeTransfer(msg.sender, amount) */\n      tag_27\n        /* \"contracts/ERC20StakingPool.sol\":21029:21039  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":21041:21047  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":21012:21015  lpt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":21012:21028  lpt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_28\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":21012:21048  lpt.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"contracts/ERC20StakingPool.sol\":20511:21056  function withdraw(uint256 amount) public virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_15:\n        /* \"contracts/ERC20StakingPool.sol\":19930:19937  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19957:19966  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":19957:19975  _balances[account] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19967:19974  account */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":19957:19975  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":19950:19975  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19873:19983  function balanceOf(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":20085:20423  function stake(uint256 amount) public virtual {\r... */\n    tag_18:\n        /* \"contracts/ERC20StakingPool.sol\":20182:20206  _totalSupply.add(amount) */\n      tag_31\n        /* \"contracts/ERC20StakingPool.sol\":20199:20205  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20182:20194  _totalSupply */\n      sload(0x01)\n        /* \"contracts/ERC20StakingPool.sol\":20182:20198  _totalSupply.add */\n      tag_32\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20182:20206  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_31:\n        /* \"contracts/ERC20StakingPool.sol\":20167:20179  _totalSupply */\n      0x01\n        /* \"contracts/ERC20StakingPool.sol\":20167:20206  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20272:20305  _balances[msg.sender].add(amount) */\n      tag_33\n        /* \"contracts/ERC20StakingPool.sol\":20298:20304  amount */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":20272:20281  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20272:20293  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20282:20292  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20272:20293  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20StakingPool.sol\":20272:20297  _balances[msg.sender].add */\n      tag_32\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20272:20305  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_33:\n        /* \"contracts/ERC20StakingPool.sol\":20248:20257  _balances */\n      0x02\n        /* \"contracts/ERC20StakingPool.sol\":20248:20269  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":20258:20268  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20248:20269  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20StakingPool.sol\":20248:20305  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":20360:20415  lpt.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_34\n        /* \"contracts/ERC20StakingPool.sol\":20381:20391  msg.sender */\n      caller\n        /* \"contracts/ERC20StakingPool.sol\":20401:20405  this */\n      address\n        /* \"contracts/ERC20StakingPool.sol\":20408:20414  amount */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":20360:20363  lpt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":20360:20380  lpt.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":20360:20415  lpt.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"contracts/ERC20StakingPool.sol\":20085:20423  function stake(uint256 amount) public virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":19429:19446  IERC20 public lpt */\n    tag_20:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":3428:3564  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_25:\n        /* \"contracts/ERC20StakingPool.sol\":3486:3493  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_37\n        /* \"contracts/ERC20StakingPool.sol\":3517:3518  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3520:3521  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3513:3516  sub */\n      tag_38\n        /* \"contracts/ERC20StakingPool.sol\":3513:3556  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_37:\n        /* \"contracts/ERC20StakingPool.sol\":3506:3556  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3428:3564  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":16178:16355  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_28:\n        /* \"contracts/ERC20StakingPool.sol\":16261:16347  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_40\n        /* \"contracts/ERC20StakingPool.sol\":16281:16286  token */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":16311:16334  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/ERC20StakingPool.sol\":16336:16338  to */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16340:16345  value */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16288:16346  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":16261:16280  _callOptionalReturn */\n      tag_41\n        /* \"contracts/ERC20StakingPool.sol\":16261:16347  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/ERC20StakingPool.sol\":16178:16355  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":2964:3145  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_32:\n        /* \"contracts/ERC20StakingPool.sol\":3022:3029  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3042:3051  uint256 c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":3058:3059  b */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":3054:3055  a */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":3054:3059  a + b */\n      add\n        /* \"contracts/ERC20StakingPool.sol\":3042:3059  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3083:3084  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3078:3079  c */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":3078:3084  c >= a */\n      lt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":3070:3116  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/ERC20StakingPool.sol\":3136:3137  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":3129:3137  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":2964:3145  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":16363:16568  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_35:\n        /* \"contracts/ERC20StakingPool.sol\":16464:16560  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_45\n        /* \"contracts/ERC20StakingPool.sol\":16484:16489  token */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":16514:16541  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/ERC20StakingPool.sol\":16543:16547  from */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16549:16551  to */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16553:16558  value */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":16491:16559  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":16464:16483  _callOptionalReturn */\n      tag_41\n        /* \"contracts/ERC20StakingPool.sol\":16464:16560  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/ERC20StakingPool.sol\":16363:16568  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":3867:4059  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_38:\n        /* \"contracts/ERC20StakingPool.sol\":3953:3960  uint256 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":3986:3987  a */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3981:3982  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":3981:3987  b <= a */\n      gt\n      iszero\n        /* \"contracts/ERC20StakingPool.sol\":3989:4001  errorMessage */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":3973:4002  require(b <= a, errorMessage) */\n      swap1\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_48:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_48)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4013:4022  uint256 c */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":4029:4030  b */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":4025:4026  a */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":4025:4030  a - b */\n      sub\n        /* \"contracts/ERC20StakingPool.sol\":4013:4030  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":4050:4051  c */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":4043:4051  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":3867:4059  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":18483:19244  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_41:\n        /* \"contracts/ERC20StakingPool.sol\":18907:18930  bytes memory returndata */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_53\n        /* \"contracts/ERC20StakingPool.sol\":18961:18965  data */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":18941:18946  token */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":18933:18960  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"contracts/ERC20StakingPool.sol\":18933:19002  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"contracts/ERC20StakingPool.sol\":18907:19002  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19037:19038  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":19017:19027  returndata */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":19017:19034  returndata.length */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":19017:19038  returndata.length > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":19013:19237  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":19159:19169  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":19148:19178  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":19140:19225  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/ERC20StakingPool.sol\":19013:19237  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_55:\n        /* \"contracts/ERC20StakingPool.sol\":18483:19244  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":11643:11839  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_54:\n        /* \"contracts/ERC20StakingPool.sol\":11746:11758  bytes memory */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":11778:11831  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_59\n        /* \"contracts/ERC20StakingPool.sol\":11801:11807  target */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":11809:11813  data */\n      dup5\n        /* \"contracts/ERC20StakingPool.sol\":11815:11816  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":11818:11830  errorMessage */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":11778:11800  _functionCallWithValue */\n      tag_60\n        /* \"contracts/ERC20StakingPool.sol\":11778:11831  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/ERC20StakingPool.sol\":11771:11831  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":11643:11839  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":13020:13999  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_60:\n        /* \"contracts/ERC20StakingPool.sol\":13150:13162  bytes memory */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":13183:13201  isContract(target) */\n      tag_62\n        /* \"contracts/ERC20StakingPool.sol\":13194:13200  target */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":13183:13193  isContract */\n      tag_63\n        /* \"contracts/ERC20StakingPool.sol\":13183:13201  isContract(target) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/ERC20StakingPool.sol\":13175:13235  require(isContract(target), \"Address: call to non-contract\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/ERC20StakingPool.sol\":13309:13321  bool success */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":13323:13346  bytes memory returndata */\n      0x60\n        /* \"contracts/ERC20StakingPool.sol\":13350:13356  target */\n      dup7\n        /* \"contracts/ERC20StakingPool.sol\":13350:13361  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20StakingPool.sol\":13370:13378  weiValue */\n      dup6\n        /* \"contracts/ERC20StakingPool.sol\":13381:13385  data */\n      dup8\n        /* \"contracts/ERC20StakingPool.sol\":13350:13386  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_65:\n      0x20\n      dup4\n      lt\n      tag_67\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_65)\n    tag_67:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":13308:13386  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":13401:13408  success */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":13397:13992  if (success) {\r... */\n      iszero\n      tag_71\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":13432:13442  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13425:13442  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_61)\n        /* \"contracts/ERC20StakingPool.sol\":13397:13992  if (success) {\r... */\n    tag_71:\n        /* \"contracts/ERC20StakingPool.sol\":13566:13567  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":13546:13556  returndata */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":13546:13563  returndata.length */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":13546:13567  returndata.length > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":13542:13981  if (returndata.length > 0) {\r... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/ERC20StakingPool.sol\":13809:13819  returndata */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13803:13820  mload(returndata) */\n      mload\n        /* \"contracts/ERC20StakingPool.sol\":13870:13885  returndata_size */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":13857:13867  returndata */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":13853:13855  32 */\n      0x20\n        /* \"contracts/ERC20StakingPool.sol\":13849:13868  add(32, returndata) */\n      add\n        /* \"contracts/ERC20StakingPool.sol\":13842:13886  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":13757:13905  {\r... */\n    tag_73:\n        /* \"contracts/ERC20StakingPool.sol\":13952:13964  errorMessage */\n      dup4\n        /* \"contracts/ERC20StakingPool.sol\":13945:13965  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_75:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_75)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_78:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20StakingPool.sol\":13020:13999  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_61:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20StakingPool.sol\":8725:9147  function isContract(address account) internal view returns (bool) {\r... */\n    tag_63:\n        /* \"contracts/ERC20StakingPool.sol\":8785:8789  bool */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":8993:9005  uint256 size */\n      dup1\n        /* \"contracts/ERC20StakingPool.sol\":9104:9111  account */\n      dup3\n        /* \"contracts/ERC20StakingPool.sol\":9092:9112  extcodesize(account) */\n      extcodesize\n        /* \"contracts/ERC20StakingPool.sol\":9084:9112  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":9138:9139  0 */\n      0x00\n        /* \"contracts/ERC20StakingPool.sol\":9131:9135  size */\n      dup2\n        /* \"contracts/ERC20StakingPool.sol\":9131:9139  size > 0 */\n      gt\n        /* \"contracts/ERC20StakingPool.sol\":9124:9139  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20StakingPool.sol\":8725:9147  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2 776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74\n\n    auxdata: 0xa2646970667358221220227e58af0658ffaf7dee602e33406587ba3db2cbcdcffd2f2e3fd77c3eca8f6464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610b15806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d1461007a57806370a08231146100a8578063a694fc3a14610100578063ce5fc8d01461012e575b600080fd5b610064610162565b6040518082815260200191505060405180910390f35b6100a66004803603602081101561009057600080fd5b810190808035906020019092919050505061016c565b005b6100ea600480360360208110156100be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610308565b6040518082815260200191505060405180910390f35b61012c6004803603602081101561011657600080fd5b8101908080359060200190929190505050610351565b005b610136610451565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600154905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610ab5602b913960400191505060405180910390fd5b61021e8260015461047590919063ffffffff16565b60018190555061027682600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461047590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104bf9092919063ffffffff16565b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103668160015461056190919063ffffffff16565b6001819055506103be81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461056190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061044e33308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105e9909392919063ffffffff16565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104b783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506106aa565b905092915050565b61055c8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061076a565b505050565b6000808284019050838110156105df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6106a4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061076a565b50505050565b6000838311158290610757576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561071c578082015181840152602081019050610701565b50505050905090810190601f1680156107495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60606107cc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108599092919063ffffffff16565b9050600081511115610854578080602001905160208110156107ed57600080fd5b8101908080519060200190929190505050610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610a8b602a913960400191505060405180910390fd5b5b505050565b60606108688484600085610871565b90509392505050565b606061087c85610a77565b6108ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061093e578051825260208201915060208101905060208303925061091b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146109a0576040519150601f19603f3d011682016040523d82523d6000602084013e6109a5565b606091505b509150915081156109ba578092505050610a6f565b6000815111156109cd5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b600080823b90506000811191505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74a2646970667358221220227e58af0658ffaf7dee602e33406587ba3db2cbcdcffd2f2e3fd77c3eca8f6464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB15 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xCE5FC8D0 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x351 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB5 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21E DUP3 PUSH1 0x1 SLOAD PUSH2 0x475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x276 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x304 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x366 DUP2 PUSH1 0x1 SLOAD PUSH2 0x561 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x3BE DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x561 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x44E CALLER ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x76A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x76A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x701 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x749 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x859 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x854 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x868 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x87C DUP6 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x93E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x9BA JUMPI DUP1 SWAP3 POP POP POP PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x9CD JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565647769746864726177207265717565 PUSH20 0x742067726561746572207468616E207374616B65 PUSH5 0x20616D6F75 PUSH15 0x74A2646970667358221220227E58AF MOD PC SELFDESTRUCT 0xAF PUSH30 0xEE602E33406587BA3DB2CBCDCFFD2F2E3FD77C3ECA8F6464736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "19287:1772:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d1461007a57806370a08231146100a8578063a694fc3a14610100578063ce5fc8d01461012e575b600080fd5b610064610162565b6040518082815260200191505060405180910390f35b6100a66004803603602081101561009057600080fd5b810190808035906020019092919050505061016c565b005b6100ea600480360360208110156100be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610308565b6040518082815260200191505060405180910390f35b61012c6004803603602081101561011657600080fd5b8101908080359060200190929190505050610351565b005b610136610451565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600154905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610ab5602b913960400191505060405180910390fd5b61021e8260015461047590919063ffffffff16565b60018190555061027682600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461047590919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610304338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104bf9092919063ffffffff16565b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103668160015461056190919063ffffffff16565b6001819055506103be81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461056190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061044e33308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105e9909392919063ffffffff16565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006104b783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506106aa565b905092915050565b61055c8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061076a565b505050565b6000808284019050838110156105df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6106a4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061076a565b50505050565b6000838311158290610757576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561071c578082015181840152602081019050610701565b50505050905090810190601f1680156107495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60606107cc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108599092919063ffffffff16565b9050600081511115610854578080602001905160208110156107ed57600080fd5b8101908080519060200190929190505050610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610a8b602a913960400191505060405180910390fd5b5b505050565b60606108688484600085610871565b90509392505050565b606061087c85610a77565b6108ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061093e578051825260208201915060208101905060208303925061091b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146109a0576040519150601f19603f3d011682016040523d82523d6000602084013e6109a5565b606091505b509150915081156109ba578092505050610a6f565b6000815111156109cd5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a34578082015181840152602081019050610a19565b50505050905090810190601f168015610a615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b600080823b90506000811191505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74a2646970667358221220227e58af0658ffaf7dee602e33406587ba3db2cbcdcffd2f2e3fd77c3eca8f6464736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xCE5FC8D0 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x351 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAB5 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21E DUP3 PUSH1 0x1 SLOAD PUSH2 0x475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x276 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x304 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x366 DUP2 PUSH1 0x1 SLOAD PUSH2 0x561 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x3BE DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x561 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x44E CALLER ADDRESS DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x76A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x76A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x701 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x749 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x859 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x854 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA8B PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x868 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x87C DUP6 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x93E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x9BA JUMPI DUP1 SWAP3 POP POP POP PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x9CD JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565647769746864726177207265717565 PUSH20 0x742067726561746572207468616E207374616B65 PUSH5 0x20616D6F75 PUSH15 0x74A2646970667358221220227E58AF MOD PC SELFDESTRUCT 0xAF PUSH30 0xEE602E33406587BA3DB2CBCDCFFD2F2E3FD77C3ECA8F6464736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "19287:1772:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19665:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20511:545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19873:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20085:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19429:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;19665:91;19709:7;19736:12;;19729:19;;19665:91;:::o;20511:545::-;20608:21;20632:9;:21;20642:10;20632:21;;;;;;;;;;;;;;;;20608:45;;20741:6;20724:13;:23;;20716:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20846:24;20863:6;20846:12;;:16;;:24;;;;:::i;:::-;20831:12;:39;;;;20930:33;20956:6;20930:9;:21;20940:10;20930:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;20906:9;:21;20916:10;20906:21;;;;;;;;;;;;;;;:57;;;;21012:36;21029:10;21041:6;21012:3;;;;;;;;;;:16;;;;:36;;;;;:::i;:::-;20511:545;;:::o;19873:110::-;19930:7;19957:9;:18;19967:7;19957:18;;;;;;;;;;;;;;;;19950:25;;19873:110;;;:::o;20085:338::-;20182:24;20199:6;20182:12;;:16;;:24;;;;:::i;:::-;20167:12;:39;;;;20272:33;20298:6;20272:9;:21;20282:10;20272:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;20248:9;:21;20258:10;20248:21;;;;;;;;;;;;;;;:57;;;;20360:55;20381:10;20401:4;20408:6;20360:3;;;;;;;;;;:20;;;;:55;;;;;;:::i;:::-;20085:338;:::o;19429:17::-;;;;;;;;;;;;:::o;3428:136::-;3486:7;3513:43;3517:1;3520;3513:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;3506:50;;3428:136;;;;:::o;16178:177::-;16261:86;16281:5;16311:23;;;16336:2;16340:5;16288:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16261:19;:86::i;:::-;16178:177;;;:::o;2964:181::-;3022:7;3042:9;3058:1;3054;:5;3042:17;;3083:1;3078;:6;;3070:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3136:1;3129:8;;;2964:181;;;;:::o;16363:205::-;16464:96;16484:5;16514:27;;;16543:4;16549:2;16553:5;16491:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16464:19;:96::i;:::-;16363:205;;;;:::o;3867:192::-;3953:7;3986:1;3981;:6;;3989:12;3973:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4013:9;4029:1;4025;:5;4013:17;;4050:1;4043:8;;;3867:192;;;;;:::o;18483:761::-;18907:23;18933:69;18961:4;18933:69;;;;;;;;;;;;;;;;;18941:5;18933:27;;;;:69;;;;;:::i;:::-;18907:95;;19037:1;19017:10;:17;:21;19013:224;;;19159:10;19148:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19140:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19013:224;18483:761;;;:::o;11643:196::-;11746:12;11778:53;11801:6;11809:4;11815:1;11818:12;11778:22;:53::i;:::-;11771:60;;11643:196;;;;;:::o;13020:979::-;13150:12;13183:18;13194:6;13183:10;:18::i;:::-;13175:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13309:12;13323:23;13350:6;:11;;13370:8;13381:4;13350:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13308:78;;;;13401:7;13397:595;;;13432:10;13425:17;;;;;;13397:595;13566:1;13546:10;:17;:21;13542:439;;;13809:10;13803:17;13870:15;13857:10;13853:2;13849:19;13842:44;13757:148;13952:12;13945:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13020:979;;;;;;;:::o;8725:422::-;8785:4;8993:12;9104:7;9092:20;9084:28;;9138:1;9131:4;:8;9124:15;;;8725:422;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "567400",
								"executionCost": "600",
								"totalCost": "568000"
							},
							"external": {
								"balanceOf(address)": "1218",
								"lpt()": "1110",
								"stake(uint256)": "infinite",
								"totalSupply()": "991",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19287,
									"end": 21059,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220227e58af0658ffaf7dee602e33406587ba3db2cbcdcffd2f2e3fd77c3eca8f6464736f6c634300060c0033",
									".code": [
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "CE5FC8D0"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19287,
											"end": 21059,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19709,
											"end": 19716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19736,
											"end": 19748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19736,
											"end": 19748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19665,
											"end": 19756,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20642,
											"end": 20652,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH data",
											"source": 0,
											"value": "F29ED7FC561F9739237966A5DD12E925D81E5F10E77BC59C72AF68E298E197A2"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20716,
											"end": 20795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20863,
											"end": 20869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20846,
											"end": 20858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20846,
											"end": 20862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20846,
											"end": 20870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20956,
											"end": 20962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20940,
											"end": 20950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20930,
											"end": 20955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20930,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20916,
											"end": 20926,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20927,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21029,
											"end": 21039,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21041,
											"end": 21047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21012,
											"end": 21028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21012,
											"end": 21048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20511,
											"end": 21056,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19930,
											"end": 19937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19966,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19967,
											"end": 19974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19873,
											"end": 19983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20199,
											"end": 20205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20182,
											"end": 20194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20182,
											"end": 20198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20182,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20298,
											"end": 20304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20282,
											"end": 20292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20272,
											"end": 20297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20272,
											"end": 20305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20257,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20258,
											"end": 20268,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20248,
											"end": 20305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 20381,
											"end": 20391,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20405,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20408,
											"end": 20414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20360,
											"end": 20380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 20360,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20085,
											"end": 20423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19429,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3513,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3428,
											"end": 3564,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16281,
											"end": 16286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16311,
											"end": 16334,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16340,
											"end": 16345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16288,
											"end": 16346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16261,
											"end": 16280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16178,
											"end": 16355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3070,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 3145,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 16484,
											"end": 16489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16514,
											"end": 16541,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16491,
											"end": 16559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16464,
											"end": 16483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 16464,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16363,
											"end": 16568,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3953,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3867,
											"end": 4059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 18930,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18961,
											"end": 18965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18941,
											"end": 18946,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18933,
											"end": 18960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18933,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 19002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19037,
											"end": 19038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19017,
											"end": 19027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19159,
											"end": 19169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH data",
											"source": 0,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19140,
											"end": 19225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19013,
											"end": 19237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 19244,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11758,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 11801,
											"end": 11807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 11816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11778,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 11778,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11643,
											"end": 11839,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13150,
											"end": 13162,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13194,
											"end": 13200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13183,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13175,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13323,
											"end": 13346,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13350,
											"end": 13356,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13350,
											"end": 13361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13370,
											"end": 13378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13401,
											"end": 13408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13397,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13542,
											"end": 13981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13809,
											"end": 13819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13803,
											"end": 13820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13870,
											"end": 13885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 13867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13849,
											"end": 13868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13757,
											"end": 13905,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13757,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13952,
											"end": 13964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13999,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9104,
											"end": 9111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9112,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9084,
											"end": 9112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9084,
											"end": 9112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9124,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 9147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F29ED7FC561F9739237966A5DD12E925D81E5F10E77BC59C72AF68E298E197A2": "776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"lpt()": "ce5fc8d0",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"\\u8fd4\\u56de\\u8d26\\u6237\\u4f59\\u989d\",\"params\":{\"account\":\"\\u8d26\\u6237\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u4f59\\u989d\"}},\"stake(uint256)\":{\"details\":\"\\u628ashushi\\u62b5\\u62bc\\u5230Boardroom\",\"params\":{\"amount\":\"\\u8d28\\u62bc\\u6570\\u91cf\"}},\"totalSupply()\":{\"details\":\"\\u8fd4\\u56de\\u603b\\u91cf\",\"returns\":{\"_0\":\"\\u603b\\u91cf\"}},\"withdraw(uint256)\":{\"details\":\"\\u8d4e\\u56deLPToken\",\"params\":{\"amount\":\"\\u8d4e\\u56de\\u6570\\u91cf\"}}},\"stateVariables\":{\"_balances\":{\"details\":\"\\u4f59\\u989d\\u6620\\u5c04\"},\"_totalSupply\":{\"details\":\"\\u8d28\\u62bc\\u603b\\u91cf\"}},\"title\":\"LP\\u8d28\\u62bc\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lpt()\":{\"notice\":\"GoCash LP Token\\u5408\\u7ea6\\u5730\\u5740\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"LPTokenWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 874,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenWrapper",
								"label": "lpt",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)76"
							},
							{
								"astId": 877,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenWrapper",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 882,
								"contract": "contracts/ERC20StakingPool.sol:LPTokenWrapper",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)76": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"lpt()": {
								"notice": "GoCash LP Token合约地址"
							}
						},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":7422:8113  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":7422:8113  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ba90962bdc25c22a2ddbd942d395d8e233a340d31a9d3c10cc16e8e4f62958c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ba90962bdc25c22a2ddbd942d395d8e233a340d31a9d3c10cc16e8e4f62958c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xA9 MULMOD PUSH3 0xBDC25C 0x22 LOG2 0xDD 0xBD SWAP5 0x2D CODECOPY 0x5D DUP15 0x23 GASPRICE CALLVALUE 0xD BALANCE 0xA9 0xD3 0xC1 0xC 0xC1 PUSH15 0x8E4F62958C64736F6C634300060C00 CALLER ",
							"sourceMap": "7422:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ba90962bdc25c22a2ddbd942d395d8e233a340d31a9d3c10cc16e8e4f62958c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xA9 MULMOD PUSH3 0xBDC25C 0x22 LOG2 0xDD 0xBD SWAP5 0x2D CODECOPY 0x5D DUP15 0x23 GASPRICE CALLVALUE 0xD BALANCE 0xA9 0xD3 0xC1 0xC 0xC1 PUSH15 0x8E4F62958C64736F6C634300060C00 CALLER ",
							"sourceMap": "7422:691:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7422,
									"end": 8113,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ba90962bdc25c22a2ddbd942d395d8e233a340d31a9d3c10cc16e8e4f62958c64736f6c634300060c0033",
									".code": [
										{
											"begin": 7422,
											"end": 8113,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 8113,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 556,
								"contract": "contracts/ERC20StakingPool.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":16086:19247  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":16086:19247  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095bd297e004f9d11fa1462067b0d07a373ff68c96c957453a143de4612b81f6b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095bd297e004f9d11fa1462067b0d07a373ff68c96c957453a143de4612b81f6b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xBD 0x29 PUSH31 0x4F9D11FA1462067B0D07A373FF68C96C957453A143DE4612B81F6B64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "16086:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095bd297e004f9d11fa1462067b0d07a373ff68c96c957453a143de4612b81f6b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xBD 0x29 PUSH31 0x4F9D11FA1462067B0D07A373FF68C96C957453A143DE4612B81F6B64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "16086:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16086,
									"end": 19247,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095bd297e004f9d11fa1462067b0d07a373ff68c96c957453a143de4612b81f6b64736f6c634300060c0033",
									".code": [
										{
											"begin": 16086,
											"end": 19247,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 19247,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20StakingPool.sol\":2701:7420  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20StakingPool.sol\":2701:7420  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea2b6d62225ca9afd58487ff8af7879884ad30192597c945558dd57e02b168cd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea2b6d62225ca9afd58487ff8af7879884ad30192597c945558dd57e02b168cd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x2B PUSH14 0x62225CA9AFD58487FF8AF7879884 0xAD ADDRESS NOT 0x25 SWAP8 0xC9 GASLIMIT SSTORE DUP14 0xD5 PUSH31 0x2B168CD64736F6C634300060C003300000000000000000000000000000000 ",
							"sourceMap": "2701:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea2b6d62225ca9afd58487ff8af7879884ad30192597c945558dd57e02b168cd64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x2B PUSH14 0x62225CA9AFD58487FF8AF7879884 0xAD ADDRESS NOT 0x25 SWAP8 0xC9 GASLIMIT SSTORE DUP14 0xD5 PUSH31 0x2B168CD64736F6C634300060C003300000000000000000000000000000000 ",
							"sourceMap": "2701:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2701,
									"end": 7420,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea2b6d62225ca9afd58487ff8af7879884ad30192597c945558dd57e02b168cd64736f6c634300060c0033",
									".code": [
										{
											"begin": 2701,
											"end": 7420,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 7420,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20StakingPool.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20StakingPool.sol\":{\"keccak256\":\"0xea616956c42857b9251b8f9080be6107ce621adb4ee595f09140cc91d4f09474\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://67af6fcd352a900b4268de7c602ae886f7d13f02d738541e7ba47c9c9fb4e660\",\"dweb:/ipfs/Qmd7qsoP5H48Ts6Ad4AsUVhhge6FRGvoB8JGb5FjZrVSDT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20StakingPool.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20StakingPool.sol",
					"exportedSymbols": {
						"Address": [
							531
						],
						"Context": [
							552
						],
						"IERC20": [
							76
						],
						"IRewardDistributionRecipient": [
							1027
						],
						"LPTokenPool": [
							1471
						],
						"LPTokenWrapper": [
							993
						],
						"Math": [
							339
						],
						"Ownable": [
							657
						],
						"SafeERC20": [
							864
						],
						"SafeMath": [
							269
						]
					},
					"id": 1472,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "88:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 7,
												"src": "208:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "207:9:0"
									},
									"scope": 76,
									"src": "162:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "225:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 15,
												"src": "324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "323:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 15,
												"src": "364:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "363:9:0"
									},
									"scope": 76,
									"src": "305:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "381:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "620:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "639:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:35:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "673:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "672:6:0"
									},
									"scope": 76,
									"src": "602:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "687:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "982:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "981:32:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "1037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1036:9:0"
									},
									"scope": 76,
									"src": "963:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1054:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1731:33:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1783:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:6:0"
									},
									"scope": 76,
									"src": "1715:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1797:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2129:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2164:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:51:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2198:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2197:6:0"
									},
									"scope": 76,
									"src": "2107:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2212:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 66,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2396:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2418:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2438:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2395:57:0"
									},
									"src": "2381:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2461:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 75,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2633:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2656:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2681:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2632:63:0"
									},
									"src": "2618:78:0"
								}
							],
							"scope": 1472,
							"src": "64:2635:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "3031:114:0",
										"statements": [
											{
												"assignments": [
													87
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 101,
														"src": "3042:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 86,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 88,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3058:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3042:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 93,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "3078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3083:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3078:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3086:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "3070:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 87,
													"src": "3136:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 85,
												"id": 100,
												"nodeType": "Return",
												"src": "3129:8:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2725:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "2977:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "2988:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2976:22:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "3022:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3021:9:0"
									},
									"scope": 269,
									"src": "2964:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "3495:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "3517:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "3520:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3523:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 112,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															147
														],
														"referencedDeclaration": 147,
														"src": "3513:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3513:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "3506:50:0"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3153:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "3441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "3452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3440:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "3486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3485:9:0"
									},
									"scope": 269,
									"src": "3428:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "3962:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "3981:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "3986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3981:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 135,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3989:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "3973:29:0"
											},
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 146,
														"src": "4013:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "4025:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 141,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "4029:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4013:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 139,
													"src": "4050:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 130,
												"id": 145,
												"nodeType": "Return",
												"src": "4043:8:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "3572:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "3880:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "3891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "3902:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3902:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3879:50:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "3953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3952:9:0"
									},
									"scope": 269,
									"src": "3867:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4385:404:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4626:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 163,
												"nodeType": "IfStatement",
												"src": "4617:47:0",
												"trueBody": {
													"id": 162,
													"nodeType": "Block",
													"src": "4629:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4651:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 156,
															"id": 161,
															"nodeType": "Return",
															"src": "4644:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													165
												],
												"declarations": [
													{
														"constant": false,
														"id": 165,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 181,
														"src": "4676:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "4692:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4688:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4676:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "4712:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 172,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4712:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 174,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "4721:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4712:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4724:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "4704:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 179,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "4780:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 180,
												"nodeType": "Return",
												"src": "4773:8:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4067:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "4331:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "4342:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:22:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "4376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4375:9:0"
									},
									"scope": 269,
									"src": "4318:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5332:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 193,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5354:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 194,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5357:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5360:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 192,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															199,
															227
														],
														"referencedDeclaration": 227,
														"src": "5350:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 191,
												"id": 197,
												"nodeType": "Return",
												"src": "5343:46:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "4797:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "5278:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "5289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5277:22:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "5323:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5322:9:0"
									},
									"scope": 269,
									"src": "5265:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "5988:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6011:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 215,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "5999:28:0"
											},
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "6038:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6038:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 224,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 219,
													"src": "6162:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 225,
												"nodeType": "Return",
												"src": "6155:8:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5405:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5906:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5928:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5905:50:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "5979:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5978:9:0"
									},
									"scope": 269,
									"src": "5893:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6703:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 238,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6725:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 239,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6731:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 237,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															268
														],
														"referencedDeclaration": 268,
														"src": "6721:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 242,
												"nodeType": "Return",
												"src": "6714:44:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6179:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "6649:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "6660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6648:22:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "6694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6693:9:0"
									},
									"scope": 269,
									"src": "6636:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "7346:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 257,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "7365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7370:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7357:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "7357:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "7404:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "7408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7404:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 255,
												"id": 266,
												"nodeType": "Return",
												"src": "7397:12:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6774:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 268,
												"src": "7264:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 268,
												"src": "7275:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 268,
												"src": "7286:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7286:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7263:50:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 268,
												"src": "7337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7336:9:0"
									},
									"scope": 269,
									"src": "7251:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1472,
							"src": "2701:4719:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7576:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 280,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7599:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7594:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 283,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "7607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7594:14:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 282,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7603:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 285,
												"nodeType": "Return",
												"src": "7587:21:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7442:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 287,
												"src": "7522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 287,
												"src": "7533:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7521:22:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 287,
												"src": "7567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7566:9:0"
									},
									"scope": 339,
									"src": "7509:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "7759:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 297,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7777:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 298,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7777:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7789:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7777:13:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "7785:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 303,
												"nodeType": "Return",
												"src": "7770:20:0"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7624:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "7705:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "7716:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7704:22:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "7750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7749:9:0"
									},
									"scope": 339,
									"src": "7692:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "7988:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 315,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "8062:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8066:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8062:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 318,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "8072:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8076:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 322,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8061:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 324,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "8083:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8087:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8083:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 327,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 310,
																					"src": "8091:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8095:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8091:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8083:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 331,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8082:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8100:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "8082:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 334,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8081:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8061:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 314,
												"id": 336,
												"nodeType": "Return",
												"src": "8054:48:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "7806:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "7934:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "7945:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7933:22:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "7979:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7978:9:0"
									},
									"scope": 339,
									"src": "7917:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1472,
							"src": "7422:691:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "8791:356:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 355,
														"src": "8993:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8993:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9082:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9084:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9104:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "9092:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9092:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9084:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "9104:7:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "9084:4:0",
														"valueSize": 1
													}
												],
												"id": 350,
												"nodeType": "InlineAssembly",
												"src": "9073:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 351,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "9131:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9131:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 346,
												"id": 354,
												"nodeType": "Return",
												"src": "9124:15:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "8138:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 356,
												"src": "8745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8744:17:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 356,
												"src": "8785:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8784:6:0"
									},
									"scope": 531,
									"src": "8725:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "10153:326:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 367,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$531",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$531",
																				"typeString": "library Address"
																			}
																		],
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 365,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 370,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													376,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 389,
														"src": "10329:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 375,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 383,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10379:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 377,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "10347:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10347:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 379,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "10370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10347:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10347:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10328:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 385,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "10401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10410:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10393:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "10393:78:0"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 531,
									"src": "10082:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "11329:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "11358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 402,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "11366:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11372:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 400,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															407,
															427
														],
														"referencedDeclaration": 427,
														"src": "11345:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11345:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "11338:67:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "10487:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "11262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "11278:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11261:35:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "11315:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11314:14:0"
									},
									"scope": 531,
									"src": "11240:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "11760:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "11801:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 421,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "11809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11815:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 423,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "11818:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 419,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11778:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11778:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 418,
												"id": 425,
												"nodeType": "Return",
												"src": "11771:60:0"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "11421:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "11665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "11681:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11681:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "11700:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11700:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11664:63:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "11746:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11746:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11745:14:0"
									},
									"scope": 531,
									"src": "11643:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "12327:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 440,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "12367:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "12375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "12381:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12388:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 439,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															447,
															480
														],
														"referencedDeclaration": 480,
														"src": "12345:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12345:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 438,
												"id": 445,
												"nodeType": "Return",
												"src": "12338:94:0"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "11847:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "12245:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "12261:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "12280:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12244:50:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "12313:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12312:14:0"
									},
									"scope": 531,
									"src": "12214:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "12837:175:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 464,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "12864:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$531",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$531",
																				"typeString": "library Address"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12856:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 462,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12856:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12856:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12856:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 467,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "12881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12856:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12888:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12848:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "12848:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 473,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "12970:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 474,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "12978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 475,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "12984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "12991:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 472,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "12947:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12947:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 460,
												"id": 478,
												"nodeType": "Return",
												"src": "12940:64:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "12448:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "12743:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12743:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "12762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "12777:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12777:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12726:78:0"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "12823:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12823:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12822:14:0"
									},
									"scope": 531,
									"src": "12696:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "13164:835:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 495,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "13194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 494,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "13183:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13183:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13203:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13175:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "13175:60:0"
											},
											{
												"assignments": [
													501,
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 529,
														"src": "13309:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 500,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 529,
														"src": "13323:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 502,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13323:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 508,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "13381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 504,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "13350:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13350:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 506,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "13370:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13350:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13350:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13308:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 511,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 501,
													"src": "13401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "13460:532:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 515,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "13546:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13546:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13566:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13546:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 525,
																"nodeType": "Block",
																"src": "13926:55:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 522,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "13952:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 521,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "13945:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13945:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 524,
																		"nodeType": "ExpressionStatement",
																		"src": "13945:20:0"
																	}
																]
															},
															"id": 526,
															"nodeType": "IfStatement",
															"src": "13542:439:0",
															"trueBody": {
																"id": 520,
																"nodeType": "Block",
																"src": "13569:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13757:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13780:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13809:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13803:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13803:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13784:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13853:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13857:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13849:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13849:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13870:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13842:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13842:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13842:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 503,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13809:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 503,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13857:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 519,
																		"nodeType": "InlineAssembly",
																		"src": "13748:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "13397:595:0",
												"trueBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "13410:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 512,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "13432:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 492,
															"id": 513,
															"nodeType": "Return",
															"src": "13425:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "13052:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "13068:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "13087:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "13105:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13051:81:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "13150:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13149:14:0"
									},
									"scope": 531,
									"src": "13020:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1472,
							"src": "8115:5887:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "14107:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "14125:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "14125:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 535,
												"id": 538,
												"nodeType": "Return",
												"src": "14118:17:0"
											}
										]
									},
									"documentation": null,
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14056:2:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "14090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14090:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14089:17:0"
									},
									"scope": 552,
									"src": "14037:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "14216:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 545,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "14227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$552",
														"typeString": "contract Context"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "14227:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 547,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "14368:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "14368:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 544,
												"id": 549,
												"nodeType": "Return",
												"src": "14361:15:0"
											}
										]
									},
									"documentation": null,
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14168:2:0"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "14202:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14202:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14201:14:0"
									},
									"scope": 552,
									"src": "14151:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1472,
							"src": "14004:383:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 553,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 552,
										"src": "14411:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$552",
											"typeString": "contract Context"
										}
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "14411:7:0"
								}
							],
							"contractDependencies": [
								552
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 657,
							"linearizedBaseContracts": [
								657,
								552
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 556,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 657,
									"src": "14426:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 555,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14426:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 562,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "14484:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "14515:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14483:57:0"
									},
									"src": "14457:84:0"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "14672:139:0",
										"statements": [
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 583,
														"src": "14683:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 566,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14683:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 568,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "14703:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14703:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14683:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 571,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "14726:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 572,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "14735:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14726:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "14726:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14789:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14781:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 580,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "14793:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "14760:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14760:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "EmitStatement",
												"src": "14755:48:0"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "14549:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 584,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14660:2:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14672:0:0"
									},
									"scope": 657,
									"src": "14648:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "14939:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 590,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 556,
													"src": "14957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 591,
												"nodeType": "Return",
												"src": "14950:13:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "14819:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14906:2:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 593,
												"src": "14930:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14929:9:0"
									},
									"scope": 657,
									"src": "14892:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "15085:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 597,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "15104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 598,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "15114:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15114:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15104:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15128:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15096:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "15096:67:0"
											},
											{
												"id": 604,
												"nodeType": "PlaceholderStatement",
												"src": "15174:1:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "14979:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 606,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15082:2:0"
									},
									"src": "15064:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "15588:94:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 613,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "15625:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15641:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15633:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 612,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "15604:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15604:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "EmitStatement",
												"src": "15599:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 620,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "15655:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15672:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 621,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15664:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15664:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15655:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "15655:19:0"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "15191:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 610,
											"modifierName": {
												"argumentTypes": null,
												"id": 609,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 606,
												"src": "15578:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15578:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15560:2:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15588:0:0"
									},
									"scope": 657,
									"src": "15534:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "15907:174:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "15926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15946:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15938:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15938:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15926:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15950:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15918:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "15918:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "16028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 648,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "16036:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 646,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "16007:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16007:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "16002:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 651,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "16056:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 652,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "16065:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16056:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "16056:17:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "15690:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 634,
											"modifierName": {
												"argumentTypes": null,
												"id": 633,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 606,
												"src": "15897:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15897:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "15864:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15863:18:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15907:0:0"
									},
									"scope": 657,
									"src": "15837:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1472,
							"src": "14391:1693:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 660,
									"libraryName": {
										"contractScope": null,
										"id": 658,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 269,
										"src": "16117:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$269",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16111:27:0",
									"typeName": {
										"id": 659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16130:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 663,
									"libraryName": {
										"contractScope": null,
										"id": 661,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 531,
										"src": "16150:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$531",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16144:26:0",
									"typeName": {
										"id": 662,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16162:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "16250:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 673,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "16281:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 676,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "16311:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$76",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 25,
																		"src": "16311:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16311:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 679,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "16336:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "16340:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 674,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16288:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16288:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16288:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 672,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "16261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16261:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "16261:86:0"
											}
										]
									},
									"documentation": null,
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 685,
												"src": "16200:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 664,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "16200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 685,
												"src": "16214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 685,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16199:41:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16250:0:0"
									},
									"scope": 864,
									"src": "16178:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "16453:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 700,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "16514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$76",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 57,
																		"src": "16514:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16514:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 703,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "16543:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 704,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "16549:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "16553:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 698,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16491:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16491:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16491:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 696,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "16464:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16464:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "16464:96:0"
											}
										]
									},
									"documentation": null,
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "16389:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 686,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "16389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "16403:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "16417:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 710,
												"src": "16429:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16388:55:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16453:0:0"
									},
									"scope": 864,
									"src": "16363:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "16913:546:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "17207:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17216:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17207:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 724,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17206:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 729,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "17247:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$864",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$864",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17239:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 727,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17239:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17239:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 731,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 715,
																					"src": "17254:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 725,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "17223:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$76",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 35,
																				"src": "17223:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17223:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17266:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17223:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17222:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17206:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17283:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17198:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "17198:152:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 741,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "17381:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 744,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "17411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$76",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "17411:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17411:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 747,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "17435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 748,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "17444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17388:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17388:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17388:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 740,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "17361:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17361:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "17361:90:0"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "16576:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "16858:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 712,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "16858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "16872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "16889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16857:46:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16913:0:0"
									},
									"scope": 864,
									"src": "16837:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "17553:200:0",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 788,
														"src": "17564:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 773,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "17631:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 768,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17611:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$864",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$864",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 766,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17603:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17603:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 770,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "17618:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 764,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "17587:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$76",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 35,
																"src": "17587:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17587:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "17587:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17587:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17564:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 777,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "17668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 780,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "17698:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$76",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "17698:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17698:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 783,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "17722:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 784,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "17731:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 778,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17675:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17675:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17675:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 776,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "17648:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17648:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "17648:97:0"
											}
										]
									},
									"documentation": null,
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "17498:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 754,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "17498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "17512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "17529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17497:46:0"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17553:0:0"
									},
									"scope": 864,
									"src": "17467:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "17847:245:0",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 825,
														"src": "17858:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 809,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "17925:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17932:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 804,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17905:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$864",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$864",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17897:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17897:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17897:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 806,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "17912:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 800,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "17881:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$76",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 35,
																"src": "17881:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17881:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "17881:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17881:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17858:118:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "18007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 817,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "18037:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$76",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "18037:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "18037:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 820,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "18061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 821,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "18070:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "18014:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18014:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 813,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "17987:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17987:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "17987:97:0"
											}
										]
									},
									"documentation": null,
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "17792:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 790,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "17792:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "17806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "17823:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17791:46:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17847:0:0"
									},
									"scope": 864,
									"src": "17761:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "18553:691:0",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 862,
														"src": "18907:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 834,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18907:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 841,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18967:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 838,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "18941:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$76",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$76",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18933:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18933:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "18933:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18933:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18907:95:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 845,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "19017:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "19017:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19037:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19017:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 861,
												"nodeType": "IfStatement",
												"src": "19013:224:0",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "19040:197:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 852,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 835,
																				"src": "19159:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 854,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19172:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 853,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19172:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 855,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19171:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 850,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "19148:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "19148:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19148:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19180:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 849,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "19140:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19140:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "19140:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "18100:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "18512:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$76",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 828,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 76,
													"src": "18512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 863,
												"src": "18526:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18511:33:0"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18553:0:0"
									},
									"scope": 864,
									"src": "18483:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1472,
							"src": "16086:3161:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "19251:34:0",
								"text": " @title LP质押合约"
							},
							"fullyImplemented": true,
							"id": 993,
							"linearizedBaseContracts": [
								993
							],
							"name": "LPTokenWrapper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 868,
									"libraryName": {
										"contractScope": null,
										"id": 866,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 269,
										"src": "19324:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$269",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19318:27:0",
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19337:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 871,
									"libraryName": {
										"contractScope": null,
										"id": 869,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 864,
										"src": "19357:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$864",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19351:27:0",
									"typeName": {
										"contractScope": null,
										"id": 870,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "19371:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "19384:39:0",
										"text": "@notice GoCash LP Token合约地址"
									},
									"functionSelector": "ce5fc8d0",
									"id": 874,
									"mutability": "mutable",
									"name": "lpt",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 993,
									"src": "19429:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$76",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 873,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "19429:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "19455:21:0",
										"text": "@dev 质押总量"
									},
									"id": 877,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 993,
									"src": "19482:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 876,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19482:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "19517:21:0",
										"text": "@dev 余额映射"
									},
									"id": 882,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 993,
									"src": "19544:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 881,
										"keyType": {
											"id": 879,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19552:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "19544:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 880,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "19563:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "19718:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 877,
													"src": "19736:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 887,
												"id": 889,
												"nodeType": "Return",
												"src": "19729:19:0"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "19598:61:0",
										"text": " @dev 返回总量\n @return 总量"
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19685:2:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "19709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19708:9:0"
									},
									"scope": 993,
									"src": "19665:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "19939:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 899,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "19957:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 901,
													"indexExpression": {
														"argumentTypes": null,
														"id": 900,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "19967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19957:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 902,
												"nodeType": "Return",
												"src": "19950:25:0"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "19764:103:0",
										"text": " @dev 返回账户余额\n @param account 账户地址\n @return 余额"
									},
									"functionSelector": "70a08231",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "19892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19891:17:0"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "19930:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19929:9:0"
									},
									"scope": 993,
									"src": "19873:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "20131:292:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 910,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "20167:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 913,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "20199:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 911,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "20182:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "20182:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20182:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20167:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "20167:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 917,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "20248:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 920,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 918,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "20258:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "20258:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20248:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 926,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "20298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 921,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "20272:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 924,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 922,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "20282:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20282:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20272:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "20272:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20272:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20248:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "20248:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 933,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "20381:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "20381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 937,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "20401:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPTokenWrapper_$993",
																		"typeString": "contract LPTokenWrapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPTokenWrapper_$993",
																		"typeString": "contract LPTokenWrapper"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20393:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20393:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "20408:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 930,
															"name": "lpt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "20360:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "20360:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$76_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20360:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "20360:55:0"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "19991:88:0",
										"text": " @dev 把shushi抵押到Boardroom\n @param amount 质押数量"
									},
									"functionSelector": "a694fc3a",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "20100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20099:16:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20131:0:0"
									},
									"scope": 993,
									"src": "20085:338:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "20560:496:0",
										"statements": [
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "directorShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 991,
														"src": "20608:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 951,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "20632:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 954,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 952,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "20642:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "20642:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20632:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20608:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 957,
																"name": "directorShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "20724:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 958,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "20741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20749:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2",
																"typeString": "literal_string \"withdraw request greater than staked amount\""
															},
															"value": "withdraw request greater than staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f29ed7fc561f9739237966a5dd12e925d81e5f10e77bc59c72af68e298e197a2",
																"typeString": "literal_string \"withdraw request greater than staked amount\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20716:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "20716:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 963,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "20831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 966,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "20863:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 964,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "20846:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "20846:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20846:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20831:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "20831:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 970,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "20906:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 973,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 971,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "20916:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "20916:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20906:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 979,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "20956:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 974,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "20930:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 977,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 975,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "20940:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20940:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20930:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "20930:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20930:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20906:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "20906:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 986,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "21029:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "21029:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "21041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 983,
															"name": "lpt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "21012:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$76",
																"typeString": "contract IERC20"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "21012:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$76_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21012:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "21012:36:0"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "20431:74:0",
										"text": " @dev 赎回LPToken\n @param amount 赎回数量"
									},
									"functionSelector": "2e1a7d4d",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "20529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20528:16:0"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20560:0:0"
									},
									"scope": 993,
									"src": "20511:545:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1472,
							"src": "19287:1772:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 994,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 657,
										"src": "21188:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$657",
											"typeString": "contract Ownable"
										}
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "21188:7:0"
								}
							],
							"contractDependencies": [
								552,
								657
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1027,
							"linearizedBaseContracts": [
								1027,
								657,
								552
							],
							"name": "IRewardDistributionRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "101114cf",
									"id": 997,
									"mutability": "mutable",
									"name": "rewardDistribution",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1027,
									"src": "21203:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21203:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3c6b16ab",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "21273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21272:16:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21305:0:0"
									},
									"scope": 1027,
									"src": "21245:61:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "21348:148:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1005,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "21381:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21381:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1007,
																"name": "rewardDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "21397:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21381:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f742072657761726420646973747269627574696f6e",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21430:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856",
																"typeString": "literal_string \"Caller is not reward distribution\""
															},
															"value": "Caller is not reward distribution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856",
																"typeString": "literal_string \"Caller is not reward distribution\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21359:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "21359:117:0"
											},
											{
												"id": 1012,
												"nodeType": "PlaceholderStatement",
												"src": "21487:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1014,
									"name": "onlyRewardDistribution",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21345:2:0"
									},
									"src": "21314:182:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "21623:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1021,
														"name": "rewardDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "21634:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1022,
														"name": "_rewardDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "21655:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21634:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "21634:40:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0d68b761",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1019,
											"modifierName": {
												"argumentTypes": null,
												"id": 1018,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 606,
												"src": "21608:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "21608:9:0"
										}
									],
									"name": "setRewardDistribution",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_rewardDistribution",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1026,
												"src": "21535:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21534:29:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21623:0:0"
									},
									"scope": 1027,
									"src": "21504:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1472,
							"src": "21138:547:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1029,
										"name": "LPTokenWrapper",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 993,
										"src": "24083:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LPTokenWrapper_$993",
											"typeString": "contract LPTokenWrapper"
										}
									},
									"id": 1030,
									"nodeType": "InheritanceSpecifier",
									"src": "24083:14:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1031,
										"name": "IRewardDistributionRecipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1027,
										"src": "24099:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRewardDistributionRecipient_$1027",
											"typeString": "contract IRewardDistributionRecipient"
										}
									},
									"id": 1032,
									"nodeType": "InheritanceSpecifier",
									"src": "24099:28:0"
								}
							],
							"contractDependencies": [
								552,
								657,
								993,
								1027
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1028,
								"nodeType": "StructuredDocumentation",
								"src": "23992:65:0",
								"text": " @title LP Token矿池合约\n @notice 周期180天"
							},
							"fullyImplemented": true,
							"id": 1471,
							"linearizedBaseContracts": [
								1471,
								1027,
								657,
								552,
								993
							],
							"name": "LPTokenPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1034,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24135:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$76",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1033,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "24135:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "24161:33:0",
										"text": "@notice 时间周期 = 180天"
									},
									"functionSelector": "1be05289",
									"id": 1038,
									"mutability": "mutable",
									"name": "DURATION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24200:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24200:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313830",
										"id": 1037,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24226:8:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "24241:24:0",
										"text": "@notice 开始时间"
									},
									"functionSelector": "8da58897",
									"id": 1041,
									"mutability": "mutable",
									"name": "starttime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24271:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1040,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24271:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "24319:24:0",
										"text": "@notice 结束时间"
									},
									"functionSelector": "ebe2b12b",
									"id": 1045,
									"mutability": "mutable",
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24349:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24349:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1044,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24379:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "24387:30:0",
										"text": "@notice 每秒奖励数量"
									},
									"functionSelector": "7b0a47ee",
									"id": 1049,
									"mutability": "mutable",
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24423:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24423:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24451:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "24459:30:0",
										"text": "@notice 最后更新时间"
									},
									"functionSelector": "c8f33c91",
									"id": 1052,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24495:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1051,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24495:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "24531:30:0",
										"text": "@notice 储存奖励数量"
									},
									"functionSelector": "df136d65",
									"id": 1055,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24567:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1054,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24567:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "24609:50:0",
										"text": "@notice 每个质押Token支付用户的奖励"
									},
									"functionSelector": "8b876347",
									"id": 1060,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24665:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1059,
										"keyType": {
											"id": 1057,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24673:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24665:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1058,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24684:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "24729:42:0",
										"text": "@notice 用户未发放的奖励数量"
									},
									"functionSelector": "0700037d",
									"id": 1065,
									"mutability": "mutable",
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1471,
									"src": "24777:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1064,
										"keyType": {
											"id": 1062,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24785:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24777:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1063,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24796:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1069,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1069,
												"src": "24846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24845:16:0"
									},
									"src": "24828:34:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1075,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "24881:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "24903:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24880:38:0"
									},
									"src": "24868:51:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1081,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "24941:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "24963:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24940:38:0"
									},
									"src": "24925:54:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1087,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "25002:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "25024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25001:38:0"
									},
									"src": "24985:55:0"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "25276:107:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1097,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "25287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1099,
																"name": "token_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "25302:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1098,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "25295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$76_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25295:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"src": "25287:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "25287:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1103,
														"name": "lpt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "25320:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1105,
																"name": "lptoken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "25333:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1104,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "25326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$76_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25326:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$76",
															"typeString": "contract IERC20"
														}
													},
													"src": "25320:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$76",
														"typeString": "contract IERC20"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "25320:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1109,
														"name": "starttime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "25353:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1110,
														"name": "starttime_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "25365:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25353:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "25353:22:0"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "25048:149:0",
										"text": " @dev 构造函数\n @param token_ token地址\n @param lptoken_ LPtoken地址\n @param starttime_ 开始时间"
									},
									"id": 1114,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "token_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "25215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "lptoken_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "25231:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "starttime_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "25249:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25214:54:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25276:0:0"
									},
									"scope": 1471,
									"src": "25203:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "25463:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1118,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "25482:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "25482:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1120,
																"name": "starttime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "25501:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25482:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c50546f6b656e5368617265506f6f6c3a206e6f74207374617274",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25512:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46e51deb8239b193085b64d549036bdc35fccfbc7081d1e3de3fa0b9193344cc",
																"typeString": "literal_string \"LPTokenSharePool: not start\""
															},
															"value": "LPTokenSharePool: not start"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46e51deb8239b193085b64d549036bdc35fccfbc7081d1e3de3fa0b9193344cc",
																"typeString": "literal_string \"LPTokenSharePool: not start\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25474:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "25474:68:0"
											},
											{
												"id": 1125,
												"nodeType": "PlaceholderStatement",
												"src": "25553:1:0"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "25391:44:0",
										"text": " @dev 检查开始时间"
									},
									"id": 1127,
									"name": "checkStart",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25460:2:0"
									},
									"src": "25441:121:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "25689:593:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1132,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "25757:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1133,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "25780:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25780:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25757:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "25757:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1137,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "25871:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1138,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "25888:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25888:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25871:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "25871:43:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1142,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "25969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25988:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25980:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "25969:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "25965:298:0",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "25992:271:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1148,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "26075:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1150,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1149,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "26083:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26075:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1152,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1130,
																			"src": "26101:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1151,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "26094:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26094:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26075:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "26075:34:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1156,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "26197:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1158,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1157,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "26220:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26197:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "26231:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26197:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "26197:54:0"
														}
													]
												}
											},
											{
												"id": 1164,
												"nodeType": "PlaceholderStatement",
												"src": "26273:1:0"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "25570:74:0",
										"text": " @dev 更新奖励\n @param account 用户地址"
									},
									"id": 1166,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1166,
												"src": "25672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25671:17:0"
									},
									"src": "25650:632:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "26510:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1174,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "26586:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "26586:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1176,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "26603:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1172,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "26577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$339_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "26577:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26577:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1178,
												"nodeType": "Return",
												"src": "26570:46:0"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "26290:148:0",
										"text": " @dev 返回奖励的最后期限\n @return 最后期限\n @notice 如果没有到达结束时间,返回当前时间"
									},
									"functionSelector": "80faa57d",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26477:2:0"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1180,
												"src": "26501:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26500:9:0"
									},
									"scope": 1471,
									"src": "26444:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "26775:505:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1186,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "26810:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26810:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26827:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26810:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1193,
												"nodeType": "IfStatement",
												"src": "26806:78:0",
												"trueBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "26830:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1190,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "26852:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1185,
															"id": 1191,
															"nodeType": "Return",
															"src": "26845:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1208,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "27243:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27243:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27211:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1202,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "27173:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1199,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1052,
																							"src": "27131:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1196,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1180,
																								"src": "27078:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1197,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "27078:26:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1198,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 119,
																						"src": "27078:52:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27078:68:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 182,
																				"src": "27078:94:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27078:106:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "27078:132:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27078:138:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 199,
																"src": "27078:164:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27078:179:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1194,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "27035:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "27035:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27035:237:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1212,
												"nodeType": "Return",
												"src": "27015:257:0"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "26632:81:0",
										"text": " @dev 每个质押Token的奖励\n @return 奖励数量"
									},
									"functionSelector": "cd3daf9d",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26742:2:0"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1214,
												"src": "26766:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26765:9:0"
									},
									"scope": 1471,
									"src": "26719:561:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "27443:348:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1238,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "27766:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1240,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1239,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "27774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27766:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27738:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1229,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1060,
																						"src": "27682:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1231,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1230,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1217,
																						"src": "27705:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27682:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1226,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1214,
																						"src": "27661:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27661:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "27661:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27661:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1223,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1217,
																					"src": "27630:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1222,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 904,
																				"src": "27620:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27620:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 182,
																		"src": "27620:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27620:95:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 199,
																"src": "27620:117:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27620:123:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "27620:145:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27620:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1242,
												"nodeType": "Return",
												"src": "27600:183:0"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "27288:86:0",
										"text": " @dev 用户已奖励的数量\n @param account 用户地址"
									},
									"functionSelector": "008cc262",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1244,
												"src": "27396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27395:17:0"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1244,
												"src": "27434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27433:9:0"
									},
									"scope": 1471,
									"src": "27380:411:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										943
									],
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "28074:236:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1258,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "28120:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28129:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28120:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f74207374616b652030",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28132:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ef6714deeebfeb945a862ced486e6902694724a8279842e470c950ebd97af1c",
																"typeString": "literal_string \"HUSDGOCLPTokenSharePool: Cannot stake 0\""
															},
															"value": "HUSDGOCLPTokenSharePool: Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ef6714deeebfeb945a862ced486e6902694724a8279842e470c950ebd97af1c",
																"typeString": "literal_string \"HUSDGOCLPTokenSharePool: Cannot stake 0\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28112:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "28112:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1267,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "28222:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1264,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "28210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_LPTokenPool_$1471",
																"typeString": "contract super LPTokenPool"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "28210:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28210:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "28210:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "28283:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28283:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "28295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1270,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "28276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28276:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "28271:31:0"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "27799:87:0",
										"text": " @dev 质押指定数量的token\n @param amount 质押数量"
									},
									"functionSelector": "a694fc3a",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1251,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "28051:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "28051:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1253,
											"modifierName": {
												"argumentTypes": null,
												"id": 1250,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1166,
												"src": "28038:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28038:24:0"
										},
										{
											"arguments": null,
											"id": 1255,
											"modifierName": {
												"argumentTypes": null,
												"id": 1254,
												"name": "checkStart",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1127,
												"src": "28063:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28063:10:0"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28029:8:0"
									},
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "28000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27989:32:0"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28074:0:0"
									},
									"scope": 1471,
									"src": "27975:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "28519:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1291,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "28565:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28574:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28565:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "48555344474f434c50546f6b656e5368617265506f6f6c3a2043616e6e6f742077697468647261772030",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28577:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e85ee5087a90428432078dbd8d4e57ecaadd93cfcfac4363407006c688ba18f8",
																"typeString": "literal_string \"HUSDGOCLPTokenSharePool: Cannot withdraw 0\""
															},
															"value": "HUSDGOCLPTokenSharePool: Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e85ee5087a90428432078dbd8d4e57ecaadd93cfcfac4363407006c688ba18f8",
																"typeString": "literal_string \"HUSDGOCLPTokenSharePool: Cannot withdraw 0\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28557:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "28557:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "28673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1297,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "28658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_LPTokenPool_$1471",
																"typeString": "contract super LPTokenPool"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 992,
														"src": "28658:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28658:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "28658:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1304,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "28737:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "28749:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "28727:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28727:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "EmitStatement",
												"src": "28722:34:0"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "28318:93:0",
										"text": " @dev 提款指定数额的质押token\n @param amount 质押数量"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1284,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "28496:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "28496:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1286,
											"modifierName": {
												"argumentTypes": null,
												"id": 1283,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1166,
												"src": "28483:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28483:24:0"
										},
										{
											"arguments": null,
											"id": 1288,
											"modifierName": {
												"argumentTypes": null,
												"id": 1287,
												"name": "checkStart",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1127,
												"src": "28508:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28508:10:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28474:8:0"
									},
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1310,
												"src": "28445:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28434:32:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28519:0:0"
									},
									"scope": 1471,
									"src": "28417:347:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "28835:143:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1316,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "28911:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28911:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1315,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "28901:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28901:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1310
														],
														"referencedDeclaration": 1310,
														"src": "28892:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28892:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "28892:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1321,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "28959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28959:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "28959:11:0"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "28772:32:0",
										"text": " @dev 退出"
									},
									"functionSelector": "e9fad8ee",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28823:2:0"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28835:0:0"
									},
									"scope": 1471,
									"src": "28810:168:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "29094:439:0",
										"statements": [
											{
												"assignments": [
													1336
												],
												"declarations": [
													{
														"constant": false,
														"id": 1336,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "29157:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1338,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "29181:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "29181:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1337,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "29174:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29174:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29157:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1342,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "29240:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29249:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29240:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "29236:290:0",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "29252:274:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1345,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "29318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1348,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1346,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "29326:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "29326:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29318:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29340:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "29318:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "29318:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1355,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "29404:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "29404:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1357,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "29416:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1352,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "29385:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$76",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 685,
																	"src": "29385:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$76_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$76_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29385:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1359,
															"nodeType": "ExpressionStatement",
															"src": "29385:38:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1361,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "29495:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "29495:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1363,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "29507:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1360,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "29484:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29484:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1365,
															"nodeType": "EmitStatement",
															"src": "29479:35:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "28986:38:0",
										"text": " @dev 获取奖励"
									},
									"functionSelector": "3d18b912",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1329,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "29071:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "29071:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1331,
											"modifierName": {
												"argumentTypes": null,
												"id": 1328,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1166,
												"src": "29058:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29058:24:0"
										},
										{
											"arguments": null,
											"id": 1333,
											"modifierName": {
												"argumentTypes": null,
												"id": 1332,
												"name": "checkStart",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1127,
												"src": "29083:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29083:10:0"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29048:2:0"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29094:0:0"
									},
									"scope": 1471,
									"src": "29030:503:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1002
									],
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "29752:1475:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1384,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "29811:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "29811:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1386,
														"name": "starttime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "29829:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29811:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "30830:390:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1445,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "30898:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1448,
																			"name": "DURATION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "30922:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1446,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "30911:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 199,
																		"src": "30911:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30911:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30898:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "30898:33:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1452,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "30996:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1453,
																	"name": "starttime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "31013:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30996:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "30996:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1456,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "31090:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1459,
																			"name": "DURATION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "31119:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1457,
																			"name": "starttime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1041,
																			"src": "31105:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 102,
																		"src": "31105:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31105:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31090:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "31090:38:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1464,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "31201:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1463,
																	"name": "RewardAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "31189:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31189:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "EmitStatement",
															"src": "31184:24:0"
														}
													]
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "29807:1413:0",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "29840:984:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1388,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "29910:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "29910:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1390,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "29929:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29910:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1425,
																"nodeType": "Block",
																"src": "30074:451:0",
																"statements": [
																	{
																		"assignments": [
																			1401
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1425,
																				"src": "30156:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "30156:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1407,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1404,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -4,
																						"src": "30193:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "30193:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1402,
																					"name": "periodFinish",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1045,
																					"src": "30176:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "30176:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30176:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "30156:53:0"
																	},
																	{
																		"assignments": [
																			1409
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1409,
																				"mutability": "mutable",
																				"name": "leftover",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1425,
																				"src": "30319:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1408,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "30319:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1414,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1412,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "30352:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1410,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1401,
																					"src": "30338:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 182,
																				"src": "30338:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30338:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "30319:44:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1415,
																				"name": "rewardRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "30462:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1421,
																						"name": "DURATION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1038,
																						"src": "30500:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1418,
																								"name": "leftover",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1409,
																								"src": "30486:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1416,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1372,
																								"src": "30475:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1417,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 102,
																							"src": "30475:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "30475:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 199,
																					"src": "30475:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30475:34:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30462:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1424,
																		"nodeType": "ExpressionStatement",
																		"src": "30462:47:0"
																	}
																]
															},
															"id": 1426,
															"nodeType": "IfStatement",
															"src": "29906:619:0",
															"trueBody": {
																"id": 1399,
																"nodeType": "Block",
																"src": "29943:125:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1392,
																				"name": "rewardRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "30019:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1395,
																						"name": "DURATION",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1038,
																						"src": "30043:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1393,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "30032:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1394,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 199,
																					"src": "30032:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30032:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30019:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1398,
																		"nodeType": "ExpressionStatement",
																		"src": "30019:33:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1427,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "30588:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1428,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "30605:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "30605:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30588:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1431,
															"nodeType": "ExpressionStatement",
															"src": "30588:32:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1432,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "30688:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1436,
																			"name": "DURATION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1038,
																			"src": "30723:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1433,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "30703:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "30703:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 102,
																		"src": "30703:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30703:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30688:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "30688:44:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1441,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "30805:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1440,
																	"name": "RewardAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "30793:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30793:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1443,
															"nodeType": "EmitStatement",
															"src": "30788:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "29541:79:0",
										"text": " @dev 通知奖励数量\n @param reward 奖励数量"
									},
									"functionSelector": "3c6b16ab",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1376,
											"modifierName": {
												"argumentTypes": null,
												"id": 1375,
												"name": "onlyRewardDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1014,
												"src": "29704:22:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29704:22:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29748:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "29740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1378,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29740:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29740:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1382,
											"modifierName": {
												"argumentTypes": null,
												"id": 1377,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1166,
												"src": "29727:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29727:24:0"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29695:8:0"
									},
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1470,
												"src": "29664:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29653:32:0"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29752:0:0"
									},
									"scope": 1471,
									"src": "29626:1601:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1472,
							"src": "24059:7171:0"
						}
					],
					"src": "39:31191:0"
				},
				"id": 0
			}
		}
	}
}